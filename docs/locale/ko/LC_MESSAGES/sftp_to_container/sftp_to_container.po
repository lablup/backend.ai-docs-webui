# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Lablup Inc.
# This file is distributed under the same license as the Backend.AI Console
# User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI Console User Guide 19.09\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-26 01:24+0900\n"
"PO-Revision-Date: 2020-03-27 15:12+0900\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Last-Translator: Jonghyun Park <jpark@lablup.com>\n"
"Language-Team: Lablup\n"
"Language: ko\n"
"X-Generator: Poedit 2.3\n"

#: ../../sftp_to_container/sftp_to_container.rst:3
msgid "Connect to Container with SFTP (FileZilla)"
msgstr "컨테이너에 SFTP 접속 (FileZilla를 통한 접속 예)"

#: ../../sftp_to_container/sftp_to_container.rst:5
msgid ""
"Backend.AI supports SSH/SFTP connection to the created container. In "
"this section, we will look at how to access container through SFTP with "
"a FileZilla client."
msgstr ""
"Backend.AI는 생성한 컨테이너에 SSH/SFTP 접속을 지원하고 있습니다. 이번 절"
"에서는 컨테이너 내부로 FileZilla 클라이언트를 통해 SFTP 접속하는 방법에 "
"관해 알아보겠습니다."

#: ../../sftp_to_container/sftp_to_container.rst:10
msgid ""
"SSH/SFTP connection is supported only on desktop app, and not yet "
"supported on web-based console service."
msgstr ""
"SSH/SFTP 지원은 데스크탑 앱 콘솔에서만 지원하며, 웹 기반 콘솔에서는 아직 "
"지원하지 않습니다."

#: ../../sftp_to_container/sftp_to_container.rst:13
msgid ""
"Backend.AI Console app supports OpenSSH-based public key connection "
"(RSA2048). To access with a client such as PuTTY on Windows, a private "
"key must be converted into a ppk file through a program such as "
"PuTTYgen. You can refer to the following link for the conversion method: "
"https://wiki.filezilla-project.org/Howto."
msgstr ""
"앱에서 지원하는 접속 방법은 OpenSSH 기반 public key 접속(RSA2048)입니다. "
"윈도우즈의 PuTTY 등 클라이언트를 통해 접속하려면 PuTTYgen 등과 같은 프로"
"그램을 통해 private key를 ppk 파일로 변환해야 합니다. 변환 방법은 다음 링"
"크를 참조 할 수 있습니다: https://wiki.filezilla-project.org/Howto."

#: ../../sftp_to_container/sftp_to_container.rst:19
msgid ""
"If you want to use your own public key, you can create a user-type "
"storage folder named ``.ssh`` and store the public key in that folder to "
"use that public key for authentication. In this example, we will use an "
"automatically generated key."
msgstr ""
"자신의 public key를 사용하고 싶은 경우, ``.ssh`` 라는 이름의 사용자 타입 "
"Storage 폴더를 생성하고 그 폴더에 public key를 저장하게 되면 해당 public "
"key를 인증에 사용할 수 있습니다. 이번 예에서는 자동으로 생성된 키를 사용"
"하도록 하겠습니다."

#: ../../sftp_to_container/sftp_to_container.rst:24
msgid ""
"First, create a compute session, then click the app icon (first button) "
"in Control, followed by SSH/SFTP icon. Then, a daemon that allows SSH/"
"SFTP access inside the container will be initiated, and the Console app "
"interacts with the daemon through a local wsproxy service."
msgstr ""
"먼저 세션을 하나 생성한 후 Control의 앱 아이콘(플레이 버튼)을 클릭하고 "
"SSH / SFTP 아이콘을 클릭합니다. 그러면 해당 컨테이너 내부에서 SSH / SFTP "
"접속을 할 수 있도록 해주는 데몬(demon)이 돌게 되고, 로컬 proxy를 통해 콘"
"솔 앱과 컨테이너 내부의 데몬이 연결됩니다."

#: ../../sftp_to_container/sftp_to_container.rst:30
msgid ""
"You cannot establish a SSH/SFTP connection to the container until you "
"click this SSH/SFTP icon. When you close the Console app and launch it "
"again, the connection between the local proxy and the Console app is "
"initialized, so the SSH/SFTP icon must be clicked again."
msgstr ""
"이 아이콘을 클릭하기 전에는 해당 세션에 SSH/SFTP 접속을 할 수가 없습니"
"다. 만약, 콘솔 앱을 껐다가 다시 켜게 되면 로컬 proxy와 콘솔 앱 사이의 연"
"결기 초기화 되므로 SSH / SFTP 아이콘을 다시 한 번 클릭해야 합니다."

#: ../../sftp_to_container/sftp_to_container.rst:35
msgid ""
"Next, a dialog containing SSH/SFTP connection information will be pop "
"up. Remember the address written in the SFTP URL and click the download "
"link to save the ``id_container`` file on the local machine. This file "
"is an auto-generated SSH private key. Instead of using a link, you can "
"also download the auto-generated ``id_container`` file under ``/home/"
"work/`` with your terminal or Jupyter Notebook. The auto-generated SSH "
"key does not change unless renewed."
msgstr ""
"이어 SSH / SFTP connection 정보를 담고 있는 다이얼로그가 뜨는데, SFTP URL"
"에 적힌 접속 주소를 기억하고 ``id_container`` 파일 다운로드 링크를 클리하"
"여 로컬 머신에 받아 둡니다. 이 파일은 자동 생성된 private key입니다. 링크"
"를 사용하는 대신 터미널 또는 Jupyter Notebook으로 ``/home/work/`` 하위에 "
"자동 생성된 id_container 파일을 다운로드 할 수도 있습니다. 자동 생성된 "
"SSH key는 별도로 갱신을 하지 않는 한 변하지 않습니다."

#: ../../sftp_to_container/sftp_to_container.rst:43
msgid ""
"The current connection port number is 10000, 10001, 10002, ... in the "
"order of clicking the SSH/SFTP icon after starting the Console app. "
"Therefore, the session where the first SSH/SFTP app is clicked will "
"occupy port 10000, and the session where the second SSH/SFTP app is "
"clicked will take port 10001. When the Console app is restarted, the "
"port mapping is initialized, so the session where the SSH/SFTP app is "
"clicked for the first time after the Console app restart will take over "
"from port 10000 again. In the future, we will add the ability for user "
"to specify the port number of SSH/SFTP connection."
msgstr ""
"현재 접속 포트 번호는 콘솔 앱을 시작한 후 SSH / SFTP 아이콘을 클릭하는 순"
"서대로 10000, 10001, 10002, … 와 같은 순서로 할당되게 됩니다. 따라서, 가"
"장 먼저 SSH / SFTP 앱을 클릭한 세션이 10000번 포트로 접속을 맺게 되고, "
"두 번째 SSH / SFTP 앱을 클릭한 세션이 10001번 포트를 가져가게 됩니다. 콘"
"솔 앱을 다시 시작하면 포트 연결이 초기화 되므로, 콘솔 앱 재시작 후 처음 "
"SSH / SFTP 앱이 클릭되는 세션이 다시 10000번 포트부터 가져가게 됩니다. 향"
"후 사용자가 지정한 포트 번호를 사용하는 기능을 추가할 예정입니다."

#: ../../sftp_to_container/sftp_to_container.rst:56
msgid ""
"``id_container`` is an OpenSSH-based key, so if you use a client that "
"supports only Windows or ppk type keys, you must convert it. Here, we "
"will convert through the PuTTYgen program installed with PuTTY. After "
"running the PuTTYgen, click on the import key in the Conversions menu. "
"Select the downloaded ``id_container`` file from the file open dialog. "
"Click the Save private key button of PuTTYGen and save the file with the "
"name ``id_container.ppk``."
msgstr ""
"``id_container`` 는 OpenSSH 기반의 키이므로, 윈도우 또는 ppk 형태의 키만 "
"지원하는 클라이언트를 사용할 경우 변환을 해야 합니다. 여기서는 PuTTY와 함"
"께 설치되는 PuTTYgen 프로그램을 통해 변환을 해보겠습니다. PuTTYgen 프로그"
"램을 실행한 후 Conversions 메뉴의 import key를 클릭합니다. 이어 뜨는 파"
"일 선택 다이얼로그에서 다운로드 한 ``id_container`` 파일을 선택합니다. "
"PuTTYGen의 Save private key 버튼을 클릭하여 ``id_container.ppk`` 라는 이름"
"으로 파일을 저장합시다."

#: ../../sftp_to_container/sftp_to_container.rst:66
msgid ""
"After launching the FileZilla client, go to the Settings-Connection-SFTP "
"and register the key file ``id_container.ppk`` (``id_container`` for "
"clients supporting OpenSSH)."
msgstr ""
"이제 FileZilla 클라이언트 앱을 실행한 후 설정-연결-SFTP 페이지로 들어가 "
"생성한 ``id_container.ppk`` (OpenSSH를 지원하는 클라이언트의 경우 "
"``id_container``) 키 파일을 등록해 줍니다."

#: ../../sftp_to_container/sftp_to_container.rst:73
msgid ""
"Open Site Manager, create a new site, and enter the connection "
"information as follows."
msgstr ""
"사이트 관리자를 열고 새 사이트를 하나 만든 후 다음과 같이 접속 정보를 적"
"어 줍니다."

#: ../../sftp_to_container/sftp_to_container.rst:79
msgid ""
"When connecting to a container for the first time, the following "
"confirmation popup may appear. Click the OK button to save the host key."
msgstr ""
"해당 컨테이너에 처음 접속하는 경우 다음과 같은 확인 창이 뜰 수 있습니다. "
"확인 버튼을 눌러 호스트 키를 저장합시다."

#: ../../sftp_to_container/sftp_to_container.rst:87
msgid ""
"After a while, you can see that the connection is established as "
"follows. You can now transfer large files to ``/home/work/`` or other "
"mounted storage folder with this SFTP connection."
msgstr ""
"잠시 기다린 후 다음과 같이 접속이 되는 것을 확인할 수 있습니다. SFTP 접속"
"을 통해 ``/home/work/`` 및 마운트 된 Storage 폴더에 대용량 파일을 전송하"
"는 등의 작업을 수행할 수 있습니다."
