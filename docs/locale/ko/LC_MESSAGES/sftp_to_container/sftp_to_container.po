# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Lablup Inc.
# This file is distributed under the same license as the Backend.AI Console
# User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI Console User Guide 19.09\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-04 17:22+0900\n"
"PO-Revision-Date: 2022-07-05 01:03+0900\n"
"Last-Translator: DaeHyun Sung <dhsung@lablup.com>\n"
"Language-Team: Lablup\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.8.0\n"
"X-Generator: Poedit 3.1\n"

#: ../../sftp_to_container/sftp_to_container.rst:3
msgid "SSH/SFTP Connection to a Compute Session"
msgstr "연산 세션에 SSH/SFTP 접속하기 (Linux/Mac/Visual Studio Code)"

#: ../../sftp_to_container/sftp_to_container.rst:5
msgid ""
"Backend.AI supports SSH/SFTP connection to the created compute sessions "
"(containers). In this section, we will learn how to do it."
msgstr ""
"Backend.AI는 생성된 연산 세션(컨테이너)에 SSH/SFTP 접속을 지원하고 있습니다. "
"이번 절에서는 그 방법에 관해 알아봅니다."

#: ../../sftp_to_container/sftp_to_container.rst:9
msgid ""
"SSH/SFTP connection is supported only on desktop apps, and not yet supported "
"on web-based Web-UI service."
msgstr ""
"SSH/SFTP 지원은 데스크탑 앱 Web-UI에서만 지원하며, 웹 기반 Web-UI에서는 아직 "
"지원하지 않습니다."

#: ../../sftp_to_container/sftp_to_container.rst:14
msgid "For Linux / Mac"
msgstr ""

#: ../../sftp_to_container/sftp_to_container.rst:16
msgid ""
"First, create a compute session, then click the app icon (first button) in "
"Control, followed by SSH / SFTP icon. Then, a daemon that allows SSH/SFTP "
"access from inside the container will be initiated, and the Web-UI app "
"interacts with the daemon through a local proxy service."
msgstr ""
"먼저 연산 세션을 하나 생성한 후 Control의 앱 아이콘(첫 번째 버튼)을 클릭하고 "
"SSH / SFTP 아이콘을 클릭합니다. 그러면 해당 컨테이너 내부에서 SSH/SFTP 접속"
"을 할 수 있도록 해주는 데몬(demon)이 뜨게 되고, 로컬 proxy를 통해 Web-UI 앱"
"과 컨테이너 내부의 데몬이 연결됩니다."

#: ../../sftp_to_container/sftp_to_container.rst:22
msgid ""
"You cannot establish a SSH/SFTP connection to the session until you click "
"the SSH/SFTP icon. When you close the Web-UI app and launch it again, the "
"connection between the local proxy and the Web-UI app is initialized, so the "
"SSH/SFTP icon must be clicked again."
msgstr ""
"이 아이콘을 클릭하기 전에는 해당 세션에 SSH/SFTP 접속을 할 수가 없습니다. 만"
"약, Web-UI 앱을 껐다가 다시 켜게 되면 로컬 proxy와 Web-UI 앱 사이의 연결이 초"
"기화 되므로 SSH/SFTP 아이콘을 다시 한 번 클릭해주어야 합니다."

#: ../../sftp_to_container/sftp_to_container.rst:27
msgid ""
"Next, a dialog containing SSH/SFTP connection information will be pop up. "
"Remember the address (especially the assigned port) written in the SFTP URL "
"and click the download link to save the ``id_container`` file on the local "
"machine. This file is an automatically generated SSH private key. Instead of "
"using the link, you can also download the ``id_container`` file located "
"under ``/home/work/`` with your web terminal or Jupyter Notebook. The auto-"
"generated SSH key may change when new session is created. In that case, it "
"must be downloaded again."
msgstr ""
"이어 SSH/SFTP connection 정보를 담고 있는 다이얼로그가 뜨는데, SSH URL에 적"
"힌 접속 주소(특히 할당 받은 포트)를 기억한 뒤 ``id_container`` 파일 다운로드 "
"링크를 클릭하여 로컬 머신에 받아 둡니다. 이 파일은 자동으로 생성된 SSH "
"private key입니다. 링크를 통해 다운로드하는 대신 터미널 또는 Jupyter Notebook"
"으로 ``/home/work/`` 하위에 위치하고 있는 ``id_container`` 파일을 다운로드 "
"할 수도 있습니다. 자동 생성된 SSH key는 세션이 새로 생성될 때마다 변할 수도 "
"있는데, 이럴 경우 다시 다운로드 받아야 합니다."

#: ../../sftp_to_container/sftp_to_container.rst:39
msgid ""
"To SSH connect to the compute session with the downloaded SSH private key, "
"you run the following command in the shell environment. You should write the "
"path to the downloaded ``id_container`` file after ``-i`` option and the "
"assigned port number after ``-p`` option. The user inside the compute "
"session is usually set to ``work``, but if your session uses other account, "
"the ``work`` part in ``work@localhost`` should be changed to the actual "
"session account.  If you run the command correctly, you can see that SSH "
"connection is made to the compute session and you are welcomed by the "
"container's shell environment."
msgstr ""
"다운로드 받은 SSH private key로 연산 세션에 SSH 접속을 하려면 쉘 환경에서 다"
"음과 같은 명령을 내릴 수 있습니다. 이 때 ``-i`` 옵션에 다운로드 받은 "
"``id_container`` 파일의 위치를, ``-p`` 옵션에 연산 세션이 할당 받은 포트 번호"
"를 적어주어야 합니다. 연산 세션 내의 사용자는 보통 ``work`` 로 설정되는데, 만"
"약 ``work`` 가 아닌 다른 계정을 사용하는 경우라면 ``work@localhost`` 에서 "
"``work`` 부분을 실제 접속되는 계정으로 바꾸어 주어야 합니다. 정상적으로 명령"
"을 내렸다면 연산 세션에 SSH 접속이 이루어지고 컨테이너 내부의 쉘 환경에 접속"
"되는 것을 확인할 수 있습니다."

#: ../../sftp_to_container/sftp_to_container.rst:57
msgid ""
"Connecting by SFTP would almost be the same. After running the SFTP client "
"and setting public key-based connection method, simply specify "
"``id_container`` as the SSH private key. Each FTP client may adopt different "
"way, so refer to each FTP client manual for details."
msgstr ""
"SFTP 접속을 하는 방법도 거의 같습니다. SFTP 클라이언트를 실행하고 public key "
"기반의 접속 설정을 한 후 ``id_container`` 를 SSH private key로 지정하면 됩니"
"다. FTP 클라이언트 별로 사용 방법은 상이할 수 있으므로, 자세한 방법은 각 FTP "
"클라이언트 매뉴얼을 참고 하십시오."

#: ../../sftp_to_container/sftp_to_container.rst:63
msgid ""
"The SSH/SFTP connection port number is randomly assigned each time when a "
"session is created. If you want to use a specific SSH/SFTP port number, you "
"can input the port number in the \"Preferred SSH Port\" field in the user "
"settings menu. To avoid possible collisions with other services within the "
"compute session, it is recommended to specify a port number between "
"10000-65000. However, if SSH/SFTP connections are made by two or more "
"compute sessions at the same time, the second SSH/SFTP connection cannot use "
"the designated port (since the first SSH/SFTP connection has already taken "
"it), so a random port number will be assigned."
msgstr ""
"SSH/SFTP 접속 포트 번호는 연산 세션을 생성할 때마다 임의의 값이 할당됩니다. "
"만약, SSH/SFTP 접속 포트를 특정한 값으로 고정하고 싶다면, 사용자 설정 메뉴에"
"서 “Preferred SSH Port” 항목에 포트 번호를 기입할 수 있습니다. 세션 내의 다"
"른 서비스와의 충돌을 가능한 방지하기 위해 포트 번호는 10000-65000 사이의 값"
"을 지정하는 것을 권장합니다. 다만, 두 개 이상의 연산 세션에서 동시에 SSH/"
"SFTP 연결을 맺게되는 경우, 두 번째 SSH/SFTP 연결은 지정된 포트를 사용할 수 없"
"으므로 (첫 번째 SSH/SFTP 연결이 이미 점유) 임의의 포트 번호를 할당받게 됩니"
"다."

#: ../../sftp_to_container/sftp_to_container.rst:74
msgid ""
"If you want to use your own SSH keypair instead of ``id_container``, create "
"a user-type folder named ``.ssh``. If you create ``authorized_keys`` file in "
"that folder and append it with the contents of your SSH public key, you can "
"connect by SSH/SFTP through your own SSH private key without having to "
"download the ``id_container`` after creating a compute session."
msgstr ""
"만약 ``id_container`` 대신 사용자 자신의 SSH keypair를 사용하고 싶다면, ``."
"ssh`` 라는 이름의 사용자 폴더를 하나 만듭니다. 그 폴더 안에 "
"``authorized_keys`` 파일을 만든 후 사용할 SSH public key를 파일 내용으로 추가"
"하면, 연산 세션 생성 후 ``id_container`` 파일을 다운로드 할 필요없이 자신의 "
"SSH private key를 통해 SSH/SFTP 접속할 수 있습니다."

#: ../../sftp_to_container/sftp_to_container.rst:82
msgid "For Windows / FileZilla"
msgstr ""

#: ../../sftp_to_container/sftp_to_container.rst:84
msgid ""
"Backend.AI Web-UI app supports OpenSSH-based public key connection "
"(RSA2048). To access with a client such as PuTTY on Windows, a private key "
"must be converted into a ``ppk`` file through a program such as PuTTYgen. "
"You can refer to the following link for the conversion method: https://wiki."
"filezilla-project.org/Howto. For easier explanation, this section will "
"describe how to connect to SFTP through FileZilla client on Windows."
msgstr ""
"Backend.AI Web-UI 앱에서 지원하는 SSH/SFTP 접속 방법은 OpenSSH 기반 public "
"key 접속(RSA2048)입니다. 윈도우즈의 PuTTY 등 클라이언트를 통해 접속하려면 "
"PuTTYgen 등과 같은 프로그램으로 SSH private key를 ppk 파일로 변환하는 작업이 "
"추가로 합니다. 변환 방법은 다음 링크를 참조 할 수 있습니다: https://wiki."
"filezilla-project.org/Howto. 보다 쉬운 설명을 위해 이번 절에서는 Windows에서 "
"FileZilla 클라이언트를 통해 SFTP 접속하는 방법에 관해 알아보겠습니다."

#: ../../sftp_to_container/sftp_to_container.rst:91
msgid ""
"Refer to the connection method on Linux/Mac, create a compute session, check "
"the connection port and download ``id_container``. ``id_container`` is an "
"OpenSSH-based key, so if you use a client that supports only Windows or ppk "
"type keys, you must convert it. Here, we will convert through the PuTTYgen "
"program installed with PuTTY. After running the PuTTYgen, click on the "
"import key in the Conversions menu. Select the downloaded ``id_container`` "
"file from the file open dialog. Click the Save private key button of "
"PuTTYGen and save the file with the name ``id_container.ppk``."
msgstr ""
"Linux/Mac에서의 접속 방법을 참고하여 연산 세션을 생성하고 접속 포트 확인과 "
"``id_container`` 다운로드를 수행합니다. ``id_container`` 는 OpenSSH 기반의 키"
"이므로, 윈도우 또는 ppk 형태의 키만 지원하는 클라이언트를 사용할 경우 변환을 "
"해야 합니다. 여기서는 PuTTY와 함께 설치되는 PuTTYgen 프로그램을 통해 변환을 "
"해보겠습니다. PuTTYgen 프로그램을 실행한 후 Conversions 메뉴의 import key를 "
"클릭합니다. 이어 뜨는 파일 선택 다이얼로그에서 다운로드 한 id_container 파일"
"을 선택합니다. PuTTYGen의 Save private key 버튼을 클릭하여 ``id_container."
"ppk`` 라는 이름으로 파일을 저장합시다."

#: ../../sftp_to_container/sftp_to_container.rst:103
msgid ""
"After launching the FileZilla client, go to the Settings-Connection-SFTP and "
"register the key file ``id_container.ppk`` (``id_container`` for clients "
"supporting OpenSSH)."
msgstr ""
"이제 FileZilla 클라이언트 앱을 실행한 후 설정-연결-SFTP 페이지로 들어가 생성"
"한 ``id_container.ppk`` (OpenSSH를 지원하는 클라이언트의 경우 "
"``id_container``) 키 파일을 등록해 줍니다."

#: ../../sftp_to_container/sftp_to_container.rst:110
msgid ""
"Open Site Manager, create a new site, and enter the connection information "
"as follows."
msgstr ""
"사이트 관리자를 열고 새 사이트를 하나 만든 후 다음과 같이 접속 정보를 적어 줍"
"니다."

#: ../../sftp_to_container/sftp_to_container.rst:116
msgid ""
"When connecting to a container for the first time, the following "
"confirmation popup may appear. Click the OK button to save the host key."
msgstr ""
"해당 컨테이너에 처음 접속하는 경우 다음과 같은 확인 창이 뜰 수 있습니다. 확"
"인 버튼을 눌러 호스트 키를 저장합시다."

#: ../../sftp_to_container/sftp_to_container.rst:124
msgid ""
"After a while, you can see that the connection is established as follows. "
"You can now transfer large files to ``/home/work/`` or other mounted storage "
"folder with this SFTP connection."
msgstr ""
"잠시 기다린 후 다음과 같이 접속이 되는 것을 확인할 수 있습니다. SFTP 접속을 "
"통해 ``/home/work/`` 및 마운트 된 Storage 폴더에 대용량 파일을 전송하는 등의 "
"작업을 수행할 수 있습니다."

#: ../../sftp_to_container/sftp_to_container.rst:132
msgid "For Visual Studio Code"
msgstr ""

#: ../../sftp_to_container/sftp_to_container.rst:134
msgid ""
"Backend.AI supports to develop by Visual Studio Code using SSH/SFTP "
"connection to the created compute sessions (containers). Once connected to a "
"server, you can interact with files and folders anywhere on the compute "
"sessions(containers). In this section, we will learn how to do it."
msgstr ""
"Backend.AI는 생성된 연산 세션(컨테이너)에 SSH/SFTP접속을 이용하여 Visual "
"Studio Code로 개발을 지원하고 있습니다. 한번 서버로 연결을 하면, 연산 세션(컨"
"테이너)의 어디서나 파일과 폴더를 작업할 수 있습니다. 이번 절에서는 그 방법에 "
"관해 알아봅니다."

#: ../../sftp_to_container/sftp_to_container.rst:139
msgid "Prerequisite installed plugin - remote-development extension pack"
msgstr "우선 설치해야할 플러그인 - 원격 개발(remote-development) 확장 팩"

#: ../../sftp_to_container/sftp_to_container.rst:141
msgid "Link: https://aka.ms/vscode-remote/download/extension"
msgstr "링크: https://aka.ms/vscode-remote/download/extension"

#: ../../sftp_to_container/sftp_to_container.rst:143
msgid ""
"For the first time, You should install Visual Studio Code and the Remote "
"Development extension pack."
msgstr ""
"우선, Visual Studio Code와 원격 개발(Remote Development) 확장팩을 설치해야합"
"니다."

#: ../../sftp_to_container/sftp_to_container.rst:145
msgid "Below is the capture of install the Remote Development extension pack."
msgstr "다음은 원격 개발(Remote Development) 확장 팩의 설치 화면입니다."

#: ../../sftp_to_container/sftp_to_container.rst:150
msgid ""
"After installed remote-development extension pack on Visual Studio Code, you "
"should to set the ssh connection for the compute sesion(container)."
msgstr ""
"Visual Studio Code에서 원격 개발(remote-development) 확장 팩 설치 후, 연산 세"
"션(컨테이너)용 SSH 연결을 설정해야 합니다."

#: ../../sftp_to_container/sftp_to_container.rst:152
msgid ""
"For the first file, You click the 'Download ssh key' button and download & "
"save file to the suitable location. Also, get the Port information. It'll "
"use the SSH config file.( eg. ``.ssh/config``)"
msgstr ""
"우선, ‘SSH 키 다운로드’ 버튼을 클릭한 후, 적절한 위치에 파일을 다운로드 받아 "
"저장합니다. 또한, 포트 정보를 알아봅시다. 이 정보는 SSH 설정 파일( ``.ssh/"
"config`` )에 사용 할 것입니다."

#: ../../sftp_to_container/sftp_to_container.rst:158
msgid "And then, setting SSH config file."
msgstr "다음에는 SSH 설정(config)파일을 설정합니다."

#: ../../sftp_to_container/sftp_to_container.rst:160
msgid ""
"Following the ``.ssh/config`` file, You can set the ssh config file. "
"``Host`` name can name it arbitrarily."
msgstr ""
"다음의 ``.ssh/config`` 파일에서 ssh 설정을 할 수 있습니다. ``Host`` 이름은 임"
"의로 지정할 수 있습니다."

#: ../../sftp_to_container/sftp_to_container.rst:163
msgid "In this exmaple, The host name is `vscode`."
msgstr "예제로, 호스트 이름은 `vscode` 입니다."

#: ../../sftp_to_container/sftp_to_container.rst:175
msgid ""
"After setting ssh config file, you select `View` menu and `Command palett` "
"submenu on Visual Studio Code."
msgstr ""
"SSH 설정 파일을 설정 후, Visual Studio Code의 `보기` 메뉴 아래의 `명령 팔레트"
"` 메뉴를 선택합니다."

#: ../../sftp_to_container/sftp_to_container.rst:180
msgid ""
"Visual Studio Code can automatically detect the type of server you are "
"connecting host. Let's connect Host by ssh."
msgstr ""
"Visual Studio Code는 연결할 호스트의 타입을 자동적으로 탐지합니다. SSH로 호스"
"트를 연결해봅시다."

#: ../../sftp_to_container/sftp_to_container.rst:186
msgid "show `.ssh/config` file's Host lists. you select to connect Host."
msgstr ""
"여기서는 `.ssh/config` 의 호스트 목록을 볼 수 있습니다. 연결할 호스트를 선택"
"합니다."

#: ../../sftp_to_container/sftp_to_container.rst:191
msgid ""
"If you select the host name on select box, You can access remote Vscode "
"using SSH connection."
msgstr ""
"만약 선택 박스의 호스트 이름을 선택하면, SSH 연결을 이용하여 원격으로 Visual "
"Studio Code를 접속 할 수 있습니다."

#: ../../sftp_to_container/sftp_to_container.rst:193
msgid ""
"After you are connected, you'll be in an empty window. You can always refer "
"to the Status bar to see which host you are connected to."
msgstr ""
"연결이 된 후, 빈 창에 표시됩니다. 상태 표시 줄을 참조하면 연결된 호스트를 항"
"상 확인 할 수 있습니다."

#: ../../sftp_to_container/sftp_to_container.rst:198
msgid ""
"Clicking on the Status bar item will provide a list of remote commands while "
"you are connected."
msgstr ""
"상태 표시줄 항목을 클릭하면 연결되어 있는 동안 원격 명령 목록이 제공됩니다."

#: ../../sftp_to_container/sftp_to_container.rst:200
msgid ""
"You can then open any folder or workspace on the remote machine using File > "
"Open... or File > Open Workspace... just as you would locally!"
msgstr ""
"그런 다음 로컬에서와 마찬가지로 파일 > 열기… 또는 파일 > 워크스페이스 열기..."
"를 사용하여 바로 원격 시스템에서 폴더나 워크스페이스를 열 수 있습니다!"
