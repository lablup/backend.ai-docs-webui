# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Lablup Inc.
# This file is distributed under the same license as the Backend.AI Console
# User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI Console User Guide 25.05\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-13 11:09+0900\n"
"PO-Revision-Date: 2023-03-20 19:09+0900\n"
"Last-Translator: DaeHyun Sung <dhsung@lablup.com>\n"
"Language: ko\n"
"Language-Team: Lablup\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../sftp_to_container/sftp_to_container.rst:5
msgid "SSH/SFTP Connection to a Compute Session"
msgstr "연산 세션에 SSH/SFTP 접속하기 (Linux/Mac/Visual Studio Code)"

#: ../../sftp_to_container/sftp_to_container.rst:7
msgid ""
"Backend.AI supports SSH/SFTP connection to the created compute sessions "
"(containers). In this section, we will learn how to do it."
msgstr ""
"Backend.AI는 생성된 연산 세션(컨테이너)에 SSH/SFTP 접속을 지원하고 있습니다. 이번 절에서는 그 방법에 관해 "
"알아봅니다."

#: ../../sftp_to_container/sftp_to_container.rst:11
msgid ""
"From 24.03 SSH/SFTP connection feature is available in both Web browser "
"and WebUI Desktop application. When the version is 23.09 or lower "
"version, you need to use WebUI Desktop app. Desktop app can be downloaded"
" a panel from the Summary page. Using this panel, the compatible version "
"will be downloaded automatically."
msgstr ""
"24.03 버전부터 연산세션에 SSH/sFTP 접속하는 기능을 웹 기반 Web UI와 데스크탑 앱에서 모두 지원합니다.현재 버전이 "
"23.09 이거나 그 이전 버전일 경우, 데스크탑 앱에서만 해당 기능을 지원합니다.데스크탑 앱은 Summary 페이지의 별도 "
"다운로드 패널에서 다운로드할 수 있습니다. 이 패널에서 다운로드하는 경우에는 호환 버전을 자동으로 다운로드 합니다."

#: ../../sftp_to_container/sftp_to_container.rst:19
msgid ""
"You can also download the app from https://github.com/lablup/backend.ai-"
"webui/releases. Make sure to download the compatible version of the Web-"
"UI in this case. You can check the Web-UI version by clicking on the "
"\"About Backend.AI\" sub-menu located in the preference menu on the "
"upper-right side of the GUI."
msgstr ""
"데스크탑 앱은 https://github.com/lablup/backend.ai-webui/releases 에서도 수동 다운로드 할"
" 수 있습니다. 이 경우에는 Backend.AI 클러스터 서버 버전과 호환되는 Web-UI 앱을 받아야 최상의 호환성을 유지할 수 "
"있습니다. Backend.AI 클러스터의 버전은 GUI 우측 상단에 있는 설정 아이콘을 클릭하면 나오는 “About "
"Backend.AI” 메뉴를 클릭하여 확인할 수 있습니다."

#: ../../sftp_to_container/sftp_to_container.rst:44
msgid "For Linux / Mac"
msgstr "Linux / Mac 환경"

#: ../../sftp_to_container/sftp_to_container.rst:46
msgid ""
"First, create a compute session, then click the app icon (first button) "
"in Control, followed by SSH / SFTP icon. Then, a daemon that allows "
"SSH/SFTP access from inside the container will be initiated, and the Web-"
"UI app interacts with the daemon through a local proxy service."
msgstr ""
"먼저 연산 세션을 하나 생성한 후 Control의 앱 아이콘(첫 번째 버튼)을 클릭하고 SSH / SFTP 아이콘을 클릭합니다. "
"그러면 해당 컨테이너 내부에서 SSH/SFTP 접속을 할 수 있도록 해주는 데몬(demon)이 뜨게 되고, 로컬 proxy를 통해 "
"Web-UI 앱과 컨테이너 내부의 데몬이 연결됩니다."

#: ../../sftp_to_container/sftp_to_container.rst:52
msgid ""
"You cannot establish a SSH/SFTP connection to the session until you click"
" the SSH/SFTP icon. When you close the Web-UI app and launch it again, "
"the connection between the local proxy and the Web-UI app is initialized,"
" so the SSH/SFTP icon must be clicked again."
msgstr ""
"이 아이콘을 클릭하기 전에는 해당 세션에 SSH/SFTP 접속을 할 수가 없습니다. 만약, Web-UI 앱을 껐다가 다시 켜게 되면"
" 로컬 proxy와 Web-UI 앱 사이의 연결이 초기화 되므로 SSH/SFTP 아이콘을 다시 한 번 클릭해주어야 합니다."

#: ../../sftp_to_container/sftp_to_container.rst:57
msgid ""
"Next, a dialog containing SSH/SFTP connection information will be pop up."
" Remember the address (especially the assigned port) written in the SFTP "
"URL and click the download link to save the ``id_container`` file on the "
"local machine. This file is an automatically generated SSH private key. "
"Instead of using the link, you can also download the ``id_container`` "
"file located under ``/home/work/`` with your web terminal or Jupyter "
"Notebook. The auto-generated SSH key may change when new session is "
"created. In that case, it must be downloaded again."
msgstr ""
"이어 SSH/SFTP connection 정보를 담고 있는 다이얼로그가 뜨는데, SSH URL에 적힌 접속 주소(특히 할당 받은 "
"포트)를 기억한 뒤 ``id_container`` 파일 다운로드 링크를 클릭하여 로컬 머신에 받아 둡니다. 이 파일은 자동으로 "
"생성된 SSH private key입니다. 링크를 통해 다운로드하는 대신 터미널 또는 Jupyter Notebook으로 "
"``/home/work/`` 하위에 위치하고 있는 ``id_container`` 파일을 다운로드 할 수도 있습니다. 자동 생성된 "
"SSH key는 세션이 새로 생성될 때마다 변할 수도 있는데, 이럴 경우 다시 다운로드 받아야 합니다."

#: ../../sftp_to_container/sftp_to_container.rst:-1
msgid "Starting SSH/SFTP daemon inside a compute session (container)"
msgstr "연산 세션에 SSH/SFTP 접속하기 (Linux/Mac/Visual Studio Code)"

#: ../../sftp_to_container/sftp_to_container.rst:69
msgid ""
"To SSH connect to the compute session with the downloaded SSH private "
"key, you run the following command in the shell environment. You should "
"write the path to the downloaded ``id_container`` file after ``-i`` "
"option and the assigned port number after ``-p`` option. The user inside "
"the compute session is usually set to ``work``, but if your session uses "
"other account, the ``work`` part in ``work@127.0.0.1`` should be changed "
"to the actual session account.  If you run the command correctly, you can"
" see that SSH connection is made to the compute session and you are "
"welcomed by the container's shell environment."
msgstr ""
"다운로드 받은 SSH private key로 연산 세션에 SSH 접속을 하려면 쉘 환경에서 다음과 같은 명령을 내릴 수 있습니다. "
"이 때 ``-i`` 옵션에 다운로드 받은 ``id_container`` 파일의 위치를, ``-p`` 옵션에 연산 세션이 할당 받은 "
"포트 번호를 적어주어야 합니다. 연산 세션 내의 사용자는 보통 ``work`` 로 설정되는데, 만약 ``work`` 가 아닌 다른 "
"계정을 사용하는 경우라면 ``work@127.0.0.1`` 에서 ``work`` 부분을 실제 접속되는 계정으로 바꾸어 주어야 "
"합니다. 정상적으로 명령을 내렸다면 연산 세션에 SSH 접속이 이루어지고 컨테이너 내부의 쉘 환경에 접속되는 것을 확인할 수 "
"있습니다."

#: ../../sftp_to_container/sftp_to_container.rst:88
msgid ""
"Connecting by SFTP would almost be the same. After running the SFTP "
"client and setting public key-based connection method, simply specify "
"``id_container`` as the SSH private key. Each FTP client may adopt "
"different way, so refer to each FTP client manual for details."
msgstr ""
"SFTP 접속을 하는 방법도 거의 같습니다. SFTP 클라이언트를 실행하고 public key 기반의 접속 설정을 한 후 "
"``id_container`` 를 SSH private key로 지정하면 됩니다. FTP 클라이언트 별로 사용 방법은 상이할 수 "
"있으므로, 자세한 방법은 각 FTP 클라이언트 매뉴얼을 참고 하십시오."

#: ../../sftp_to_container/sftp_to_container.rst:94
msgid ""
"The SSH/SFTP connection port number is randomly assigned each time when a"
" session is created. If you want to use a specific SSH/SFTP port number, "
"you can input the port number in the \"Preferred SSH Port\" field in the "
"user settings menu. To avoid possible collisions with other services "
"within the compute session, it is recommended to specify a port number "
"between 10000-65000. However, if SSH/SFTP connections are made by two or "
"more compute sessions at the same time, the second SSH/SFTP connection "
"cannot use the designated port (since the first SSH/SFTP connection has "
"already taken it), so a random port number will be assigned."
msgstr ""
"SSH/SFTP 접속 포트 번호는 연산 세션을 생성할 때마다 임의의 값이 할당됩니다. 만약, SSH/SFTP 접속 포트를 특정한 "
"값으로 고정하고 싶다면, 사용자 설정 메뉴에서 “Preferred SSH Port” 항목에 포트 번호를 기입할 수 있습니다. 세션 "
"내의 다른 서비스와의 충돌을 가능한 방지하기 위해 포트 번호는 10000-65000 사이의 값을 지정하는 것을 권장합니다. 다만, "
"두 개 이상의 연산 세션에서 동시에 SSH/SFTP 연결을 맺게되는 경우, 두 번째 SSH/SFTP 연결은 지정된 포트를 사용할 수"
" 없으므로 (첫 번째 SSH/SFTP 연결이 이미 점유) 임의의 포트 번호를 할당받게 됩니다."

#: ../../sftp_to_container/sftp_to_container.rst:105
msgid ""
"If you want to use your own SSH keypair instead of ``id_container``, "
"create a user-type folder named ``.ssh``. If you create "
"``authorized_keys`` file in that folder and append it with the contents "
"of your SSH public key, you can connect by SSH/SFTP through your own SSH "
"private key without having to download the ``id_container`` after "
"creating a compute session."
msgstr ""
"만약 ``id_container`` 대신 사용자 자신의 SSH keypair를 사용하고 싶다면, ``.ssh`` 라는 이름의 사용자"
" 폴더를 하나 만듭니다. 그 폴더 안에 ``authorized_keys`` 파일을 만든 후 사용할 SSH public key를 파일"
" 내용으로 추가하면, 연산 세션 생성 후 ``id_container`` 파일을 다운로드 할 필요없이 자신의 SSH private "
"key를 통해 SSH/SFTP 접속할 수 있습니다."

#: ../../sftp_to_container/sftp_to_container.rst:112
msgid ""
"If you receive the following warning message, try again after changing "
"the permission of the ``id_container`` to 600. (``chmod 600 <id_container"
" path>``)"
msgstr ""
"만약 다음과 같은 경고 메시지가 뜨면, ``id_container`` 의 권한을 600으로 설정한 후 재시도 합니다. "
"(``chmod 600 <id_container 경로>``)"

#: ../../sftp_to_container/sftp_to_container.rst
msgid "Permissions Warning Message"
msgstr ""

#: ../../sftp_to_container/sftp_to_container.rst:120
msgid "For Windows / FileZilla"
msgstr "Windows / FileZilla 사용 환경"

#: ../../sftp_to_container/sftp_to_container.rst:122
msgid ""
"Backend.AI Web-UI app supports OpenSSH-based public key connection "
"(RSA2048). To access with a client such as PuTTY on Windows, a private "
"key must be converted into a ``ppk`` file through a program such as "
"PuTTYgen. You can refer to the following link for the conversion method: "
"https://wiki.filezilla-project.org/Howto. For easier explanation, this "
"section will describe how to connect to SFTP through FileZilla client on "
"Windows."
msgstr ""
"Backend.AI Web-UI 앱에서 지원하는 SSH/SFTP 접속 방법은 OpenSSH 기반 public key "
"접속(RSA2048)입니다. 윈도우즈의 PuTTY 등 클라이언트를 통해 접속하려면 PuTTYgen 등과 같은 프로그램으로 SSH "
"private key를 ppk 파일로 변환하는 작업이 추가로 합니다. 변환 방법은 다음 링크를 참조 할 수 있습니다: "
"https://wiki.filezilla-project.org/Howto. 보다 쉬운 설명을 위해 이번 절에서는 Windows에서 "
"FileZilla 클라이언트를 통해 SFTP 접속하는 방법에 관해 알아보겠습니다."

#: ../../sftp_to_container/sftp_to_container.rst:129
msgid ""
"Refer to the connection method on Linux/Mac, create a compute session, "
"check the connection port and download ``id_container``. ``id_container``"
" is an OpenSSH-based key, so if you use a client that supports only "
"Windows or ppk type keys, you must convert it. Here, we will convert "
"through the PuTTYgen program installed with PuTTY. After running the "
"PuTTYgen, click on the import key in the Conversions menu. Select the "
"downloaded ``id_container`` file from the file open dialog. Click the "
"Save private key button of PuTTYGen and save the file with the name "
"``id_container.ppk``."
msgstr ""
"Linux/Mac에서의 접속 방법을 참고하여 연산 세션을 생성하고 접속 포트 확인과 ``id_container`` 다운로드를 "
"수행합니다. ``id_container`` 는 OpenSSH 기반의 키이므로, 윈도우 또는 ppk 형태의 키만 지원하는 클라이언트를"
" 사용할 경우 변환을 해야 합니다. 여기서는 PuTTY와 함께 설치되는 PuTTYgen 프로그램을 통해 변환을 해보겠습니다. "
"PuTTYgen 프로그램을 실행한 후 Conversions 메뉴의 import key를 클릭합니다. 이어 뜨는 파일 선택 "
"다이얼로그에서 다운로드 한 id_container 파일을 선택합니다. PuTTYGen의 Save private key 버튼을 "
"클릭하여 ``id_container.ppk`` 라는 이름으로 파일을 저장합시다."

#: ../../sftp_to_container/sftp_to_container.rst:-1
msgid "SSH key conversion with PuttyGen"
msgstr ""

#: ../../sftp_to_container/sftp_to_container.rst:141
msgid ""
"After launching the FileZilla client, go to the Settings-Connection-SFTP "
"and register the key file ``id_container.ppk`` (``id_container`` for "
"clients supporting OpenSSH)."
msgstr ""
"이제 FileZilla 클라이언트 앱을 실행한 후 설정-연결-SFTP 페이지로 들어가 생성한 ``id_container.ppk`` "
"(OpenSSH를 지원하는 클라이언트의 경우 ``id_container``) 키 파일을 등록해 줍니다."

#: ../../sftp_to_container/sftp_to_container.rst:-1
msgid "Filezilla settings to connect to compute session"
msgstr ""

#: ../../sftp_to_container/sftp_to_container.rst:148
msgid ""
"Open Site Manager, create a new site, and enter the connection "
"information as follows."
msgstr "사이트 관리자를 열고 새 사이트를 하나 만든 후 다음과 같이 접속 정보를 적어 줍니다."

#: ../../sftp_to_container/sftp_to_container.rst:-1
msgid "Filezilla site setting"
msgstr ""

#: ../../sftp_to_container/sftp_to_container.rst:154
msgid ""
"When connecting to a container for the first time, the following "
"confirmation popup may appear. Click the OK button to save the host key."
msgstr "해당 컨테이너에 처음 접속하는 경우 다음과 같은 확인 창이 뜰 수 있습니다. 확인 버튼을 눌러 호스트 키를 저장합시다."

#: ../../sftp_to_container/sftp_to_container.rst:-1
msgid "Unknown Host Key dialog"
msgstr ""

#: ../../sftp_to_container/sftp_to_container.rst:162
msgid ""
"After a while, you can see that the connection is established as follows."
" You can now transfer large files to ``/home/work/`` or other mounted "
"storage folder with this SFTP connection."
msgstr ""
"잠시 기다린 후 다음과 같이 접속이 되는 것을 확인할 수 있습니다. SFTP 접속을 통해 ``/home/work/`` 및 마운트 된"
" Storage 폴더에 대용량 파일을 전송하는 등의 작업을 수행할 수 있습니다."

#: ../../sftp_to_container/sftp_to_container.rst:-1
msgid "Filezilla connection established"
msgstr ""

#: ../../sftp_to_container/sftp_to_container.rst:171
msgid "For Visual Studio Code"
msgstr ""

#: ../../sftp_to_container/sftp_to_container.rst:173
msgid ""
"Backend.AI supports to develop with the local Visual Studio Code through "
"SSH/SFTP connection to a compute session. Once connected, you can "
"interact with files and folders anywhere on the compute session. In this "
"section, we will learn how to do it."
msgstr ""
"로컬 Visual Studio Code에서 SSH/SFTP를 통해 Backend.AI 연산 세션에 접속하여 원격 개발할 수도 "
"있습니다. 한번 연결을 하면, 연산 세션 상에 존재하는 모든 파일과 폴더를 활용하여 작업할 수 있습니다. 이번 절에서는 그 방법에 "
"관해 알아봅니다."

#: ../../sftp_to_container/sftp_to_container.rst:178
msgid ""
"First, you should install Visual Studio Code and the Remote Development "
"extension pack."
msgstr "우선, Visual Studio Code와 원격 개발(Remote Development) 확장팩을 설치해야 합니다."

#: ../../sftp_to_container/sftp_to_container.rst:181
msgid "Link: https://aka.ms/vscode-remote/download/extension"
msgstr "링크: https://aka.ms/vscode-remote/download/extension"

#: ../../sftp_to_container/sftp_to_container.rst:-1
msgid "Install remote ssh plugin on Visual Studio Code"
msgstr ""

#: ../../sftp_to_container/sftp_to_container.rst:186
msgid ""
"After installing the extension, you should configure the SSH connection "
"for the compute session. In the VSCode Remote Connection dialog, click "
"the copy icon button to copy the Visual Studio Code remote SSH password. "
"Also, remember the port number."
msgstr ""
"확장팩 설치 후 연산 세션 접속을 위한 SSH 연결 설정을 진행합니다. VSCode Remote Connection 다이얼로그에서 "
"복사 아이콘 버튼을 클릭하여 Visual Studio Code 원격 비밀번호를 복사 합니다. 포트 번호도 기억해 두십시오."

#: ../../sftp_to_container/sftp_to_container.rst:-1
msgid "Download SSH Key"
msgstr ""

#: ../../sftp_to_container/sftp_to_container.rst:195
msgid ""
"Then, set the SSH config file. Edit the ``~/.ssh/config`` file (for "
"Linux/Mac) or ``C:\\Users\\[user name]\\.ssh\\config`` (for Windows) and "
"add the following block. For convenience, we set the hostname to ``bai-"
"vscode``. It can be changed to any alias."
msgstr ""
"다음으로 SSH 설정 파일을 수정합니다. ``~/.ssh/config`` 파일(Linux/Mac) 또는 "
"``C:\\Users\\[user name]\\.ssh/config`` (Windows) 파일을 텍스트 편집기로 열고 다음 블록을 "
"추가합니다. 편의를 위해 호스트 이름을 ``bai-vscode`` 로 설정했지만, 이는 원하는 대로 바꾸셔도 됩니다."

#: ../../sftp_to_container/sftp_to_container.rst:209
msgid ""
"Now in the Visual Studio Code, select the `Command Palette...` from "
"`View` menu."
msgstr "이제 Visual Studio Code의 `View` - `Command Palette…` 메뉴를 선택합니다."

#: ../../sftp_to_container/sftp_to_container.rst:211
msgid "View > comma"
msgstr ""

#: ../../sftp_to_container/sftp_to_container.rst:214
msgid ""
"Visual Studio Code can automatically detect the type of host you are "
"connecting to. Let's choose `Remote-SSH: Connect to Host...`."
msgstr ""
"Visual Studio Code는 연결할 호스트의 타입을 자동으로 탐지합니다. `Remote-SSH: Connect to "
"Host...` 를 선택해봅시다."

#: ../../sftp_to_container/sftp_to_container.rst:217
msgid "SSH connect"
msgstr ""

#: ../../sftp_to_container/sftp_to_container.rst:220
msgid ""
"You will see the list of hosts in ``.ssh/config``. Please select the host"
" to connect, in this case, ``vscode``."
msgstr "여기서는 ``.ssh/config`` 의 호스트 목록을 볼 수 있습니다. 연결할 호스트(``vscode``)를 선택합니다."

#: ../../sftp_to_container/sftp_to_container.rst:223
msgid "Select remote ssh select Host"
msgstr ""

#: ../../sftp_to_container/sftp_to_container.rst:226
msgid ""
"Selecting the host name will lead you to access the remote compute "
"session. After you are connected, you will see an empty window. You can "
"always refer to the Status bar to see which host you are connected to."
msgstr ""
"연결이 된 후 빈 창이 표시됩니다. 상태 표시 줄을 참조하면 연결된 호스트를 확인할 수 있습니다. 연결이 된 후 빈 창이 "
"표시됩니다. 상태 표시 줄을 참조하면 연결된 호스트를 확인할 수 있습니다."

#: ../../sftp_to_container/sftp_to_container.rst:230
msgid "Finished remote ssh connection"
msgstr ""

#: ../../sftp_to_container/sftp_to_container.rst:233
msgid ""
"You can then open any folder or workspace on the remote host by accessing"
" `File > Open...` or `File > Open Workspace...` menu just as you usually "
"would do!"
msgstr ""
"로컬에서와 마찬가지로 `파일 > 열기...` 또는 `파일 > 워크스페이스 열기...` 메뉴를 통해 원격 호스트에서 폴더나 "
"워크스페이스를 열 수 있습니다!"

#: ../../sftp_to_container/sftp_to_container.rst:236
msgid "open remote host file directory"
msgstr ""

#: ../../sftp_to_container/sftp_to_container.rst:241
msgid "Establish SSH connection with Backend.AI client package"
msgstr "Backend.AI Client 패키지를 통해 SSH 접속하는 방법"

#: ../../sftp_to_container/sftp_to_container.rst:243
msgid ""
"This document describes how to establish an SSH connection to a compute "
"session in environments where a graphical user interface (GUI) cannot be "
"used."
msgstr "이 문서에서는 GUI 환경 사용이 불가능한 곳에서 연산 세션으로 SSH를 접속하는 방법에 관해 설명합니다."

#: ../../sftp_to_container/sftp_to_container.rst:246
msgid ""
"Typically, GPU nodes that runs compute sessions (containers) cannot be "
"accessed directly from the outside. Therefore, in order to establish an "
"SSH or sFTP connection to a compute session, a local proxy that creates a"
" tunnel needs to be launched to relay the connection between the user and"
" the session. Using the Backend.AI Client package, this process is "
"relatively simple to configure."
msgstr ""
"일반적으로 연산 세션이 생성된 GPU 노드는 외부에서 직접 접속이 불가능합니다. 따라서 연산 세션에 SSH 또는 sFTP 접속을 "
"하기 위해서는 사용자 머신과 GPU 노드에 생성된 연산 세션 사이의 터널을 중계하는 로컬 프록시가 필요합니다. Backend.AI "
"Client 패키지를 활용하면 이 과정을 비교적 간단하게 설정할 수 있습니다."

#: ../../sftp_to_container/sftp_to_container.rst:253
msgid "Prepare Backend.AI Client package"
msgstr "Backend.AI Client 패키지 사용 환경 구성"

#: ../../sftp_to_container/sftp_to_container.rst:256
msgid "Prepare with Docker image"
msgstr "Docker image를 이용한 구성"

#: ../../sftp_to_container/sftp_to_container.rst:258
msgid ""
"The Backend.AI Client package is available as a Docker image. You can "
"pull the image from the Docker Hub with the following command:"
msgstr ""
"Backend.AI Client 패키지를 도커 이미지로 다운로드할 수 있습니다. 다음 명령을 실행하여 Docker Hub에서 "
"이미지를 다운로드할 수 있습니다:"

#: ../../sftp_to_container/sftp_to_container.rst:268
msgid ""
"The version of Backend.AI server can be found in \"About Backend.AI\" "
"menu that appears when you click on the person icon on the top right "
"corner of the Web UI."
msgstr ""
"Backend.AI 서버 버전은 Web UI의 우상단 사람 아이콘을 클릭하면 나오는 “Backend.AI에 대하여”에서 확인할 수 "
"있습니다."

#: ../../sftp_to_container/sftp_to_container.rst:275
msgid "Run the Docker image with the following command:"
msgstr "다운 받은 이미지를 다음 명령으로 실행합니다."

#: ../../sftp_to_container/sftp_to_container.rst:281
msgid ""
"Check if ``backend.ai`` command is available in the container. If it is "
"available, the help message will be displayed."
msgstr "``backend.ai`` 명령이 존재하는지 확인합니다. 정상적으로 진행되었다면 도움말이 출력됩니다."

#: ../../sftp_to_container/sftp_to_container.rst:289
msgid "Prepare directly from host with a Python virtual environment"
msgstr "Python 가상환경을 통해 호스트에서 사용 환경 구성하기"

#: ../../sftp_to_container/sftp_to_container.rst:291
msgid ""
"If you cannot or do not want to use Docker, you can install the "
"Backend.AI Client package directly on your host machine. Prerequisites "
"are:"
msgstr ""
"Docker를 사용할 수 없거나 사용하고 싶지 않다면, 호스트 머신에 Backend.AI Client 패키지를 직접 설치할 수도 "
"있습니다. 사전 요구 사항은 다음과 같습니다:"

#: ../../sftp_to_container/sftp_to_container.rst:294
msgid ""
"The required version of Python may vary depending on the Backend.AI "
"Client version. You can check the compability matrix at "
"https://github.com/lablup/backend.ai#python-version-compatibility."
msgstr ""
"Python 버전은 Backend.AI Client 버전에 따라 바뀝니다. "
"https://github.com/lablup/backend.ai#python-version-compatibility 페이지에서 "
"호환 매트릭스를 확일할 수 있습니다."

#: ../../sftp_to_container/sftp_to_container.rst:297
msgid "``clang`` compiler might be needed"
msgstr "``clang`` 컴파일러 설치가 필요할 수 있습니다"

#: ../../sftp_to_container/sftp_to_container.rst:298
msgid ""
"``zstd`` package might be needed if you are using ``indygreg`` Python "
"binary."
msgstr "``indygred`` Python 바이너리를 사용하는 경우 ``zstd`` 패키지를 미리 설치해야합니다."

#: ../../sftp_to_container/sftp_to_container.rst:300
msgid ""
"It is recommended to use a Python virtual environment to install the "
"packages. One way is to use the statically-built Python binary from the "
"``indygreg`` repository. Download the binary that matches your local "
"machine architecture from the following page and unzip it."
msgstr ""
"Client 패키지 설치를 위해 별도의 Python 가상 환경 사용을 권장합니다. 한 가지 방법은 ``indygreg`` 저장소에 "
"있는 정적 빌드된 Python 바이너리를 사용하는 것입니다. 다음 사이트에서 Client 패키지를 설치할 머신 아키텍처에 맞는 "
"Python 바이너리를 다운로드한 후 압축을 해제합니다."

#: ../../sftp_to_container/sftp_to_container.rst:305
msgid "https://github.com/indygreg/python-build-standalone/releases"
msgstr ""

#: ../../sftp_to_container/sftp_to_container.rst:306
msgid ""
"If you are using a popular x86-based Ubuntu environment, you can download"
" and extract it as follows:"
msgstr "대중적으로 많이 사용되는 x86 기반 Ubuntu 환경이라면 다음과 같이 다운로드 할 수 있습니다:"

#: ../../sftp_to_container/sftp_to_container.rst:314
msgid ""
"After unarchiving the binary, ``python`` directory will be created under "
"the current directory. You can check the version of the downloaded Python"
" by running the following command."
msgstr ""
"압축을 풀면 현재 디렉토리 하위에 ``python`` 디렉토리가 생길 것입니다. 다음 명령을 실행하여 다운로드 한 파이썬의 버전을 "
"확인할 수 있습니다."

#: ../../sftp_to_container/sftp_to_container.rst:323
msgid ""
"To avoid affecting other Python environments on the system, it is "
"recommended to create a separate Python virtual environment. When you run"
" the following command, a Python virtual environment will be created "
"under the directory ``.venv.``."
msgstr ""
"시스템의 다른 파이썬 환경에 영향을 주지 않기 위해 사용자 머신에 독립적인 Python 3.10 가상 환경을 생성합니다. 다음 명령"
" 실행 시 ``.venv`` 디렉토리에 Python 가상 환경이 생성됩니다."

#: ../../sftp_to_container/sftp_to_container.rst:332
msgid ""
"Activate the virtual environment. Since a new virtual environment has "
"been activated, only the ``pip`` and ``setuptools`` packages will be "
"installed when you run the ``pip list`` command."
msgstr ""
"생성한 Python 가상환경을 활성화 합니다. 새로운 가상 환경을 활성화한 것이므로, ``pip list`` 명령 실행 시 "
"``pip`` 과 ``setuptools`` 패키지만 설치되어 있을 것입니다."

#: ../../sftp_to_container/sftp_to_container.rst:345
msgid ""
"Now, install the Backend.AI Client package. Install the client package "
"according to the server version. Here, we assume that the version is "
"23.09. If an installation-related error occurs with the ``netifaces`` "
"package, you may need to lower the versions of ``pip`` and "
"``setuptools``. Check if the ``backend.ai`` command is available."
msgstr ""
"Backend.AI Client 패키지를 설치합니다. 서버팜에 설치된 서버 버전에 맞추어 클라이언트 패키지를 설치합니다. 여기서는 "
"23.09 버전이라고 가정합니다. 만약, ``netifaces`` 라는 패키지 설치 관련 오류가 발생하는 경우, ``pip`` 과 "
"``setuptools`` 의 버전을 낮추어야할 수도 있습니다."

#: ../../sftp_to_container/sftp_to_container.rst:358
msgid "Setting up server connection for CLI"
msgstr "CLI 클라이언트에서 서버 접속 설정"

#: ../../sftp_to_container/sftp_to_container.rst:360
msgid ""
"Create a ``.env`` file and add the following content. Use the same "
"address for ``webserver-url`` that you use to connect to the Web UI "
"service from your browser."
msgstr ""
"``.env`` 파일을 만들고 다음과 같이 내용을 추가합니다. ``webserver-url`` 에는 브라우저에서 Web UI "
"서비스로 접속할 때 사용하는 주소를 동일하게 씁니다."

#: ../../sftp_to_container/sftp_to_container.rst:369
msgid ""
"Run the following CLI command to connect to the server. Enter the email "
"and password that you use to log in from your browser. If everything goes"
" well, you will see the message ``Login succeeded``."
msgstr ""
"다음 CLI 명령을 실행하여 서버에 연결합니다. 브라우저에서 로그인할 때 사용하는 이메일과 비밀번호를 입력합니다. 정상적으로 실행된"
" 경우 ``Login succeeded.`` 메시지가 뜹니다."

#: ../../sftp_to_container/sftp_to_container.rst:381
msgid "SSH/SCP Connection to Computation Session"
msgstr "연산 세션에 SSH/SCP 접속"

#: ../../sftp_to_container/sftp_to_container.rst:383
msgid ""
"Create a compute session from the browser by mounting the folder where "
"you want to copy the data. You can create the session using CLI as well, "
"but for convenience, let's assume that you have created it from the "
"browser. Remember the name of the created compute session. Here, we "
"assume it is ``ibnFmWim-session``."
msgstr ""
"브라우저에서 데이터를 복사할 폴더를 마운트 한 후 연산 세션을 생성합니다. CLI로도 생성 가능하지만 편의를 위해 브라우저에서 "
"생성한다고 하겠습니다. 생성된 연산 세션의 이름을 알아둡니다. 여기서는 ``ibnFmWim-session`` 라고 가정합니다."

#: ../../sftp_to_container/sftp_to_container.rst:389
msgid "If you simply want to SSH, execute the following command:"
msgstr "단순히 SSH 접속을 하고자 하는 경우에는 다음과 같은 명령을 실행하면 됩니다."

#: ../../sftp_to_container/sftp_to_container.rst:397
msgid ""
"If you want to download the SSH key file and explicitly run the ssh "
"command, you need to first run the following command to launch a local "
"proxy service that relays connection from the local machine to the "
"computation session. You can specify the port (9922) to use on the local "
"machine with the b option."
msgstr ""
"SSH 키 파일을 받아 ``ssh`` 명령을 명시적으로 실행하고자 하는 경우에는 먼저 다음과 같은 명령을 실행하여 로컬 머신에서 "
"연산 세션으로 접속을 중계하는 로컬 프록시 서비스를 띄워야 합니다. ``-b`` 옵션으로 로컬 머신에서 사용할 포트(9922)를 "
"지정할 수 있습니다."

#: ../../sftp_to_container/sftp_to_container.rst:408
msgid ""
"Open another terminal window on your local machine. Move to the working "
"directory where the ``.env`` file is located, and download the SSH key "
"automatically generated in the compute session."
msgstr ""
"로컬 머신에서 다른 터미널 창을 띄웁니다. ``.env`` 파일이 있는 작업 디렉토리로 이동한 후 연산 세션에서 자동 생성된 SSH"
" 키를 다운로드 합니다."

#: ../../sftp_to_container/sftp_to_container.rst:419
msgid ""
"You can use the downloaded key to SSH as follows. Since you launched the "
"local proxy on port 9922, the connection address should be 127.0.0.1 and "
"the port should be 9922. Use the user account ``work`` for the "
"connection."
msgstr ""
"다운로드 한 키를 이용해서 SSH 접속을 다음과 같이 할 수 있습니다. 9922번에 로컬 프록시 포트를 띄웠으므로 접속 주소는 "
"``127.0.0.1``, 포트는 ``9922`` 를 지정해야 합니다. 접속 사용자 계정은 ``work`` 로 사용하십시오."

#: ../../sftp_to_container/sftp_to_container.rst:434
msgid ""
"Similarly, you can use the ``scp`` command to copy files. In this case, "
"you should copy the files to the mounted folder within the compute "
"session to preserve them even after the session has been terminated."
msgstr ""
"마찬가지로 ``scp`` 명령을 사용하여 파일을 복사할 수 있습니다. 이 때, 연산 세션 내 마운트 된 폴더로 파일을 복사해야 연산"
" 세션이 종료되었을 때에도 파일을 보존할 수 있습니다."

#: ../../sftp_to_container/sftp_to_container.rst:449
msgid ""
"When all the tasks are completed, press ``Ctrl-C`` on the first terminal "
"to cancel the local proxy service."
msgstr "모든 작업이 끝난 경우에는 첫 번째 터미널에서 ``Ctrl-C`` 를 눌러 로컬 프록시 서비스를 종료합니다."

