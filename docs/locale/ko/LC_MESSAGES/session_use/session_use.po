# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Lablup Inc.
# This file is distributed under the same license as the Backend.AI Console
# User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI Console User Guide 19.09\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-12 11:03+0900\n"
"PO-Revision-Date: 2020-09-12 11:11+0900\n"
"Last-Translator: Jonghyun Park <jpark@lablup.com>\n"
"Language: ko\n"
"Language-Team: Lablup\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"X-Generator: Poedit 2.4.1\n"

#: ../../session_use/session_use.rst:3
msgid "Using Compute Session"
msgstr "연산 세션 사용하기"

#: ../../session_use/session_use.rst:5
msgid ""
"In addition to see the list of compute sessions, Sessions tab lets you "
"start new sessions or use and manage already running sessions."
msgstr ""
"Sessions 탭에서는 연산 세션을 조회하는 것뿐만 아니라 새로운 세션을 시작하"
"거나 실행 중인 세션을 사용 및 관리할 수도 있습니다."

#: ../../session_use/session_use.rst:10
msgid "Start a new session"
msgstr "새로운 세션 시작하기"

#: ../../session_use/session_use.rst:12
msgid ""
"Click START button to start a new compute session. The following setup "
"dialog will appear. Specify the language environment (Environments, "
"Version), the amount of resources (CPU, RAM, GPU, etc.) you want to use, "
"and then press the LAUNCH button."
msgstr ""
"새로운 연산 세션을 시작하려면 START 버튼을 누르세요. 다음과 같은 설정 창"
"이 뜨는데, 사용하려는 언어 환경(Environments, Version)과 자원 설정(원하"
"는 CPU, RAM, GPU 등 할당량)을 지정하고 LAUNCH 버튼을 누릅니다."

#: ../../session_use/session_use.rst:22
msgid ""
"If no mount folder is specified in \"Folders to mount\", the following "
"notification dialog may appear. It is recommended that one or more "
"storage folders to be mounted because terminating compute session by "
"default deletes all the data inside the session. If you specify a mount "
"folder and save your data in that folder, you can keep the data even if "
"the compute session is destroyed. Data preserved in the storage folder "
"can also be reused by re-mounting it when creating another compute "
"session. You can ignore the alarm and create a session. However, it's a "
"good idea to mount a folder if you're working on a job that requires you "
"to keep data from within a session. For information on how to mount a "
"folder and run a compute session, see :ref:`Related Content<session-with-"
"mounts>`."
msgstr ""
"이 때, “Folder to mount”에 아무 마운트 폴더도 지정하지 않은 경우 다음과 "
"같은 알람 다이얼로그가 뜰 수 있습니다. 연산 세션을 삭제하면 기본적으로 세"
"션 내의 모든 데이터도 같이 삭제되므로 저장 폴더를 하나 이상 마운트 하는 "
"것을 권장한다는 내용입니다. 마운트 폴더를 지정한 후 그 폴더에 데이터를 보"
"관하면 연산 세션이 삭제되더라도 데이터를 계속 보존할 수 있습니다. 저장 폴"
"더에 보존된 데이터는 다른 세션을 생성할 때 다시 마운트 하여 데이터를 재사"
"용할 수도 있습니다. 알람을 무시하고 연산 세션을 생성해도 상관없습니다. 하"
"지만, 세션 내에서 데이터를 보관해야 할 필요가 있는 작업을 하는 경우라면 "
"꼭 폴더를 마운트 하는 것이 좋습니다. 폴더를 마운트 하여 연산 세션을 실행"
"하는 법에 관해서는 :ref:`관련 내용<session-with-mounts>` 을 참고 하십시"
"오."

#: ../../session_use/session_use.rst:39
msgid "Notice that a new compute session is created in the Running tab."
msgstr "Running 탭에서 새로운 연산 세션이 생성되는 것을 확인합시다."

#: ../../session_use/session_use.rst:46
msgid "Use and Manage Running Session"
msgstr "이미 실행 중인 세션을 사용하고 관리하기"

#: ../../session_use/session_use.rst:48
msgid ""
"Now, let's take a look at how to use and manage a running compute "
"session.  If you see the Control column in the session list, there are "
"several icons. When you click the first icon, several app services "
"supported by the session will appear as shown in the following figure."
msgstr ""
"이번에는 이미 실행 중인 연산 세션을 사용하고 관리하는 법에 관해 살펴보겠"
"습니다. 세션 리스트의 Control 열을 보면 몇 가지 아이콘이 있습니다. 첫 번"
"째 아이콘을 클릭하면 다음 그림과 같이 해당 세션이 지원하는 몇 가지 앱 서"
"비스가 뜨게 됩니다."

#: ../../session_use/session_use.rst:59
msgid ""
"There are two check options under the app icons. Check each item and "
"open the app to reflect the following features:"
msgstr ""
"앱 아이콘 아래에는 두 가지 체크 옵션이 있습니다. 각 항목을 체크하고 앱을 "
"띄우면 다음과 같은 기능이 반영됩니다."

#: ../../session_use/session_use.rst:62
msgid ""
"Open app to public: Open the app to the public. Basically, web services "
"such as Terminal and Jupyter Notebook services here are not accessible "
"by other users, even if the user knows the service URL, since they are "
"considered unauthenticated. However, if you check this item anyone who "
"knows the URL (and port number) of the service can access and use it. Of "
"course, the user must have a network path to access the service."
msgstr ""
"Open app to public: 띄워진 앱을 외부로 공개합니다. 기본적으로 Terminal, "
"Jupyter Notebook 등의 웹 서비스는 다른 사람이 주소를 알더라도 미인증 사용"
"자로 간주되어 접근할 수 없습니다. 하지만, 이 옵션에 체크하고 앱을 띄우면 "
"서비스의 주소와 포트 번호를 아는 누구나 해당 앱에 접근하고 사용할 수 있"
"게 됩니다. 물론, 해당 서비스에 접근할 수 있는 네트워크 경로는 확보가 되"
"어 있어야 합니다."

#: ../../session_use/session_use.rst:68
msgid ""
"Try preferred port: When the web service is opened, a specific port is "
"assigned from the port pool created in advance by Backend.AI. Users can "
"use the service only when they connect to the port along with the IP "
"address or domain name. If you check this item and enter the port "
"number, the entered port number will be tried. However, there is no "
"guarantee that the desired port will always be assigned. The port may "
"not exist at all in the port pool, or another service may already be "
"using the port. In this case, the port number is randomly assigned."
msgstr ""
"Try preferred port: 웹 서비스가 뜰 때 Backend.AI가 사전에 생성해 둔 포트 "
"풀(pool)에서 특정 포트를 하나 할당받게 됩니다. 사용자는 IP주소 또는 도메"
"인 이름과 함께 해당 포트로 접속을 해야 서비스를 사용할 수 있습니다. 이 항"
"목에 체크하고 포트 번호를 입력하면 입력한 포트 번호를 우선적으로 할당 시"
"도하게 됩니다. 하지만, 항상 원하는 포트를 할당받는다는 보장은 없습니다. "
"포트 풀에 해당 포트가 아예 없을 수도 있고, 다른 서비스가 이미 해당 포트"
"를 할당받아 사용하고 있을 수도 있습니다. 이런 경우에는 임의로 포트 번호"
"를 할당합니다."

#: ../../session_use/session_use.rst:77
msgid ""
"Do not open the app by checking one of the items unless you have a clear "
"usage purpose and know what it means."
msgstr "확실한 사용 목적이 없다면 두 항목을 체크해서 앱을 띄우지 마십시오."

#: ../../session_use/session_use.rst:80
msgid "As a test, let's click on Jupyter Notebook."
msgstr "시험 삼아 Jupyter Notebook을 눌러봅시다."

#: ../../session_use/session_use.rst:85
msgid ""
"You will see a new window pop up and Jupyter Notebook is running. This "
"Notebook was created inside the running compute session, and it's easy "
"to use with just a click of a button without any setup. In addition, you "
"can just use the language environment and libraries provided by the "
"compute session as is, so there is no need to install a separate "
"packages. For more information on how to use Jupyter Notebook, please "
"refer to the official documentation."
msgstr ""
"새로운 창이 뜨면서 Jupyter Notebook이 실행되는 것을 확인할 수 있습니다. "
"이 Notebook은 실행 중인 연산 세션 내부에서 생성된 것으로, 별다른 설정 없"
"이 버튼 클릭만으로 손쉽게 사용할 수 있습니다. 또한, 연산 세션이 기본적으"
"로 제공하는 언어 환경 및 라이브러리를 그대로 활용할 수 있어 별도의 패키"
"지 설치 과정이 필요 없습니다. 자세한 Jupyter Notebook 사용법은 공식 문서 "
"등을 참고하시기 바랍니다."

#: ../../session_use/session_use.rst:92
msgid ""
"In the notebook's file explorer, the ``id_container file`` contains a "
"private SSH key. If necessary, you can download it and use it for SSH / "
"SFTP access to the container."
msgstr ""
"Notebook의 파일 탐색기에서 ``id_container`` 파일은 private SSH key를 담"
"고 있습니다. 필요할 경우 다운로드 하여 컨테이너로의 SSH/SFTP 접속에 이용"
"할 수 있습니다."

#: ../../session_use/session_use.rst:96
msgid ""
"Click the NEW button on the upper right corner and select Notebook for "
"Backend.AI, and ipynb window will pop up where you can enter the new "
"code."
msgstr ""
"우측 상단의 NEW 버튼을 클릭한 후 Backend.AI 용 Notebook을 선택하면 새로"
"운 코드를 입력할 수 있는 ipynb 창이 뜹니다."

#: ../../session_use/session_use.rst:104
msgid ""
"In this window, you can enter and execute any code you want by using the "
"environment that session provides.  The code execution happens on one of "
"the Backend.AI nodes where the compute session is actually created, and "
"there is no need to configure a separate environment on the local "
"machine."
msgstr ""
"이 창에서 세션 환경에 맞는 코드를 입력하고 실행해볼 수 있습니다. 코드는 "
"Backend.AI 서버를 구성하는 노드 중 연산 세션이 실제로 생성된 노드에서 실"
"행이 되며, 로컬 머신에는 별도 환경을 구성할 필요가 없습니다."

#: ../../session_use/session_use.rst:112
msgid ""
"When you close the window, you can notice that the ``Untitled.ipynb`` "
"file is created in the Notebook File Explorer. Note that the files "
"created here are deleted when you destroy the session. The way to "
"preserve those files even when the session is gone is described in the "
"Storage/Folders section."
msgstr ""
"창을 닫으면 Notebook 파일 탐색기에 방금 작업한 ``Untitled.ipynb`` 파일이 "
"생성되어 있는 것을 확인할 수 있습니다. 여기 생성된 파일은 세션을 삭제할 "
"경우 같이 삭제되는 것에 주의 하십시오. 생성된 파일을 세션이 사라지더라도 "
"보존하는 방법은 폴더 섹션에서 설명합니다."

#: ../../session_use/session_use.rst:120
msgid ""
"Return to the Session list page. This time, let's launch the terminal. "
"Click the terminal icon (the second button) to use the container's ttyd "
"daemon. The terminal will also appear in a new window, and you can type "
"commands, just like any usual terminal, which will be delivered to the "
"compute session as shown in the following figure. If you are familiar "
"with using command-line interface (CLI), you can easily interact with "
"Linux commands."
msgstr ""
"다시 세션 리스트 페이지로 돌아옵니다. 이번에는 터미널을 띄워보도록 하겠습"
"니다. 플레이 버튼 우측의 터미널 아이콘을 누르면 해당 컨테이너의 터미널을 "
"사용할 수 있습니다. 터미널 역시 새 창에서 뜨게 되며, 다음 그림처럼 연산 "
"세션 내부에 접속해서 커맨드 명령을 내릴 수 있습니다. 커맨드 사용에 익숙"
"한 분이라면 손쉽게 여러 가지 리눅스 명령을 내릴 수가 있습니다."

#: ../../session_use/session_use.rst:132
msgid ""
"If you create a file here, you can immediately see it in the Jupyter "
"Notebook you opened earlier as well. Conversely, changes made to files "
"in Jupyter Notebook can also be checked right from the terminal. This is "
"because they are using the same files in the same compute session."
msgstr ""
"만약 여기서 파일을 만들면 앞서 띄운 Jupyter Notebook에서 즉시 그 파일을 "
"확인할 수 있습니다. 반대로, Jupyter Notebook에서 편집한 파일의 변경 사항"
"도 터미널에서 바로 확인할 수 있습니다. 같은 연산 세션을 사용하고 있기 때"
"문입니다."

#: ../../session_use/session_use.rst:137
msgid ""
"In addition, you can use web-based services such as TensorBoard, Jupyter "
"Lab, etc., depending on the type of services provided by the compute "
"session."
msgstr ""
"이 외에도 연산 세션이 제공하는 서비스의 종류에 따라 TensorBoard, Jupyter "
"Lab 등과 같은 웹 기반 서비스를 이용할 수 있습니다."

#: ../../session_use/session_use.rst:140
msgid ""
"To delete a specific session, tap the red trash icon. Since the data in "
"the folder inside the compute session is deleted as soon as the compute "
"session ends, it is recommended that you move the data to the mounted "
"folder or upload it to the folder from the beginning if you want to keep "
"it."
msgstr ""
"특정 세션을 삭제하기 위해서는 빨간색 휴지통 아이콘을 누르면 됩니다. 연산 "
"세션 내부 폴더의 데이터는 연산 세션이 종료되는 순간 같이 삭제되므로, 계"
"속 유지해야 하는 데이터라면 마운트 한 폴더에 옮기거나 처음부터 폴더에 업"
"로드하는 것을 권합니다."

#: ../../session_use/session_use.rst:147
msgid "Advanced Web Terminal Usage"
msgstr "웹 터미널 고급 사용법"

#: ../../session_use/session_use.rst:149
msgid ""
"The web-based terminal we used above internally embed a utility called "
"`tmux <https://github.com/tmux/tmux/wiki>`_. tmux is a terminal "
"multiplexer that supports to open multiple shell windows within a single "
"shell, so as to allow multiple programs to run in foreground "
"simultaneously. If you want to take advantage of more powerful tmux "
"features, you can refer to the official tmux documentation and other "
"usage examples on the Internet."
msgstr ""
"위에서 사용 해보았던 웹 기반 터미널은 내부적으로 `tmux <https://github."
"com/tmux/tmux/wiki>`_ 라는 유틸리티를 사용하고 있습니다. tmux는 하나의 "
"쉘 내에서 여러 개의 창을 띄워 다중 작업 할 수 있도록 지원하는 terminal "
"multiplexer로, 쉘이 닫히더라도 작업하던 내용을 보존할 수 있는 등 다양한 "
"장점을 가지고 있습니다. 보다 강력한 터미널 기능을 활용하고 싶다면 tmux 공"
"식 문서 및 기타 인터넷 상의 다양한 사용 예제를 참고하십시오."

#: ../../session_use/session_use.rst:156
msgid "Here we are introducing some simple but useful features."
msgstr "여기서는 몇 가지 간단하지만 유용한 기능을 소개하겠습니다."

#: ../../session_use/session_use.rst:159
msgid "Copy terminal contents"
msgstr "터미널 내용 복사하기"

#: ../../session_use/session_use.rst:161
msgid ""
"tmux offers a number of useful features, but it's a bit confusing for "
"first-time users. In particular, tmux has its own clipboard buffer, so "
"when copying the contents of the terminal, you can suffer from the fact "
"that it can be pasted only within tmux by default. Furthermore, it is "
"difficult to expose user system's clipboard to tmux inside web browser, "
"so when using tmux, the terminal contents cannot be copied and pasted to "
"other programs of user's computer. The so-called ``Ctrl-C`` / ``Ctrl-V`` "
"is not working."
msgstr ""
"tmux는 다양한 장점을 가지고 있지만 처음 접하는 사용자라면 다소 혼란스러"
"운 부분도 있습니다. 특히, tmux는 자체 클립보드 버퍼를 가지고 있어 터미널"
"의 내용을 복사할 경우 기본적으로 tmux 내에서만 붙여넣을 수 있다는 부분에"
"서 어려움을 겪을 수 있습니다. 여기에 웹 기반 터미널에서는 사용자 시스템"
"의 클립보드를 tmux에 노출시키기 어렵다는 한계가 더해져서, tmux 쉘을 사용"
"하고 있는 상태에서는 마우스 드래그를 통해 터미널 내용을 복사한 후 사용자 "
"컴퓨터의 다른 프로그램에 붙여넣을 수가 없습니다. 소위 말하는 ``Ctrl-"
"C`` / ``Ctrl-V`` 가 작동하지 않는 것입니다."

#: ../../session_use/session_use.rst:169
msgid ""
"If you need to copy and paste the terminal contents to your system's "
"clipboard, you can temporarily turn off tmux's mouse support. First, "
"press ``Ctrl-B`` key to enter tmux control mode. Then type ``:set -g "
"mouse off`` and press ``Enter`` (note that you have to type the first "
"colon as well). You can check what you are typing in the status bar at "
"the bottom of the screen. Then drag the desired text from the terminal "
"with the mouse and press the ``Ctrl-C`` or ``Cmd-C`` (in Mac) to copy "
"them to the clipboard of the user's computer."
msgstr ""
"만약 터미널 내용을 사용자 시스템의 클립보드로 복사하여 붙여넣기를 할 필요"
"가 있을 때는 잠시 tmux의 마우스 지원 설정을 끌 수 있습니다. 먼저 ``Ctrl-"
"B`` 키를 눌러 tmux의 제어 모드로 진입합니다. 그 후 ``:set -g mouse off`` "
"를 입력하고 엔터키를 누릅니다 (처음 콜론까지 입력해야 합니다). 입력하는 "
"내용은 tmux 하단의 상태바에서 확인할 수 있습니다. 그 후 터미널에서 마우스"
"로 원하는 텍스트를 드래그 하고 ``Ctrl-C`` 또는 ``Cmd-C`` 키를 누르면 사용"
"자 컴퓨터의 클립보드에 해당 내용이 복사 됩니다."

#: ../../session_use/session_use.rst:177
msgid ""
"With mouse support turned off, you cannot scroll through the mouse wheel "
"to see the contents of the previous page from the terminal. In this "
"case, you can turn on mouse support again. Press ``Ctrl-B``, and this "
"time, type ``:set -g mouse on``. Now you can scroll mouse wheel to see "
"the contents of the previous page."
msgstr ""
"마우스 지원을 끈 상태에서는 마우스 휠로 스크롤하여 터미널의 이전 페이지 "
"내용을 확인할 수 없습니다. 이 때는 다시 마우스 지원을 켜면 됩니다. "
"``Ctrl-B`` 를 누른 후 이번에는 ``:set -g mouse on`` 을 입력해봅시다. 이"
"제 마우스 휠을 스크롤하여 이전 페이지의 내용을 볼 수 있게 되었습니다."

#: ../../session_use/session_use.rst:182
msgid ""
"If you remember ``:set -g mouse off`` or ``:set -g mouse on`` after "
"``Ctrl-B``, you can use the web terminal more conveniently."
msgstr ""
"이와 같이 ``Ctrl-B`` 후 ``:set -g mouse off`` 또는 ``:set -g mouse on`` "
"을 기억하면 조금 더 편리하게 웹 터미널을 활용할 수 있습니다."

#: ../../session_use/session_use.rst:186
msgid ""
"``Ctrl-B`` is tmux's default control mode key. If you set another "
"control key by modifying ``.tmux.conf`` in user home directory, you "
"should press the set key combination instead of ``Ctrl-B``."
msgstr ""
"``Ctrl-B`` 키는 tmux의 기본 제어 모드 키입니다. 만약 홈 디렉토리의 ``."
"tmux.conf`` 를 수정하여 다른 제어 키를 설정한 경우에는, ``Ctrl-B`` 대신 "
"설정된 키 조합을 눌러야 합니다."

#: ../../session_use/session_use.rst:191
msgid "Checking the terminal history using keyboard"
msgstr "키보드를 이용해 터미널 이전 내용 확인하기"

#: ../../session_use/session_use.rst:193
msgid ""
"There is also a way to copy the terminal contents and check the previous "
"contents of the terminal simultaneously. It is to check the previous "
"contents using the keyboard. Again, click ``Ctrl-B`` first, and then "
"press the ``Page Up`` and/or ``Page Down`` keys. You can see that you "
"navigate through the terminal's history with just keyboard. To exit "
"search mode, just press the ``q`` key. With this method, you can check "
"the contents of the terminal history even when the mouse support is "
"turned off to allow copy and paste."
msgstr ""
"터미널 내용 복사도 하면서 터미널의 이전 내용도 확인하고 싶은 경우에도 방"
"법이 있습니다. 바로 키보드를 이용해서 이전 내용을 확인하는 것입니다. 이번"
"에도 ``Ctrl-B`` 를 먼저 클릭 해준 뒤 ``Page Up`` 과 ``Page Down`` 키를 눌"
"러 봅시다. 키보드 만으로 터미널의 이전 내용을 탐색할 수 있다는 것을 확인"
"할 수 있습니다. 탐색 모드에서 빠져 나오려면 ``q`` 키를 눌러주면 됩니다. "
"이 방법을 이용하면 마우스 지원을 끈 상태에서도 터미널 이전 내용 확인이 가"
"능합니다."

#: ../../session_use/session_use.rst:202
msgid "Spawn multiple shells"
msgstr "여러 개의 쉘 띄우기"

#: ../../session_use/session_use.rst:204
msgid ""
"The main advantage of tmux is that you can launch and use multiple "
"shells in one terminal window. Since seeing is believing, let's press "
"the ``Ctrl-B`` key and then the ``c``. You can see that the contents of "
"the existing window disappeared and a new shell environment appeared. "
"Then, did the previous window terminated? It's not like that. Let's "
"press ``Ctrl-B`` and then ``w``. You can now see the list of shells "
"currently open on tmux like following image. Here, the shell starting "
"with ``0:`` is the shell environment you first saw, and the shell "
"starting with ``1:`` is the one you just created. You can move between "
"shells using the up/down keys. Place the cursor on the shell ``0:`` and "
"press the Enter key to select it."
msgstr ""
"tmux의 가장 큰 장점은 하나의 터미널 창에서 여러 개의 쉘을 띄우고 사용할 "
"수 있다는 점입니다. 백문이 불여일견이니 ``Ctrl-B`` 키를 누른 후 ``c`` 키"
"를 이어서 눌러봅시다. 기존 창의 내용이 사라지고 새로운 쉘 환경이 뜬 것을 "
"확인할 수 있습니다. 그러면 기존 창은 사라진 것일까요? 그렇지 않습니다. "
"``Ctrl-B`` 누른 후 ``w`` 키를 눌러 봅시다. 다음과 같이 현재 tmux 상에서 "
"열려 있는 쉘 리스트가 조회되는 것을 볼 수 있습니다. 여기서 ``0:`` 으로 시"
"작하는 쉘이 처음 보던 쉘 환경이고, ``1:`` 로시작하는 쉘은 방금 새로 생성"
"한 쉘입니다. 위/아래 방향 키를 이용해서 쉘 사이를 이동할 수 있습니다. "
"``0:`` 번 쉘에 커서를 가져다 두고 엔터 키를 눌러 선택 해보겠습니다."

#: ../../session_use/session_use.rst:218
msgid ""
"You can see the shell environment you saw first appears. In this way, "
"you can use multiple shell environments within a web terminal. To exit "
"or terminate the current shell, just enter ``exit`` command or press "
"``Ctrl-B x`` key and then type ``y``."
msgstr ""
"처음 보았던 쉘 환경이 나타나는 것을 볼 수 있습니다. 이와 같은 방식으로 "
"웹 터미널 내에서 여러 개의 쉘 환경을 띄워 두고 사용할 수 있습니다. 현재 "
"쉘을 종료하려면 ``exit`` 명령을 입력하거나 ``Ctrl-B x`` 키를 누른 후 "
"``y`` 를 입력하면 됩니다."

#: ../../session_use/session_use.rst:223
msgid "In summary:"
msgstr "정리하면 다음과 같습니다:"

#: ../../session_use/session_use.rst:225
msgid "``Ctrl-B c``: create a new tmux shell"
msgstr "``Ctrl-B c``: 새로운 tmux 쉘 생성"

#: ../../session_use/session_use.rst:226
msgid "``Ctrl-B w``: query current tmux shells and move around among them"
msgstr "``Ctrl-B w``: tmux 쉘 조회 및 이동/선택"

#: ../../session_use/session_use.rst:227
msgid "``exit`` or ``Ctrl-B x``: terminate the current shell"
msgstr "``exit`` 또는 ``Ctrl-B x``: 현재 tmux 쉘 종료"

#: ../../session_use/session_use.rst:229
msgid ""
"Combining the above commands allows you to perform various tasks "
"simultaneously on multiple shells."
msgstr ""
"위 명령을 조합하여 여러 개의 쉘에서 동시에 다양한 작업을 수행할 수 있습니"
"다."

#~ msgid ""
#~ "Wait for a while for the compute session to be started. If you have "
#~ "created a folder in the Storage menu, you can also choose them from "
#~ "the Folders to mount menu. Folders/Storages are discussed in a "
#~ "separate section."
#~ msgstr ""
#~ "잠시 기다리면 연산 세션이 시작됩니다. 미리 만들어둔 저장소(Storage)가 "
#~ "있다면 Folders to mount 메뉴에서 선택할 수도 있습니다. 저장소에 관해서"
#~ "는 별도 섹션에서 설명합니다."

#~ msgid ""
#~ "If the GPU resource is marked as FGPU, this means that the server is "
#~ "serving the GPU resources in a virtualized form. Backend.AI supports "
#~ "GPU virtualization technology that a single physical GPU can be "
#~ "divided and shared by multiple users for better utilization. "
#~ "Therefore, if you want to execute a task that does not require a "
#~ "large amount of GPU computation, you can create a compute session by "
#~ "allocating only a portion of a GPU. The amount of GPU resources that "
#~ "1 FGPU actually allocates may vary from system to system depending on "
#~ "the administrator's setting. For example, if administrator has set to "
#~ "split one physical GPU into five pieces, 5 FGPU means 1 physical GPU, "
#~ "or 1 FGPU means 0.2 physical GPU. At this configuration, if you "
#~ "create a compute session by allocating 1 FGPU, you can utilize SM "
#~ "(streaming multiprocessor) and GPU memory corresponding to 0.2 "
#~ "physical GPU for the session."
#~ msgstr ""
#~ "만약 GPU 자원이 FGPU로 표시되어 있다면, 이는 서버가 GPU 자원을 가상화"
#~ "된 형태로 제공하고 있다는 것을 의미합니다. Backend.AI는 하나의 물리 "
#~ "GPU를 여러 개로 분할해서 여러 사용자가 나누어 사용할 수 있는 가상화 기"
#~ "술을 지원하고 있습니다. 따라서, GPU 연산 소요가 크지 않은 작업을 수행"
#~ "하고자 할 경우에는 GPU의 일부만 할당하여 연산 세션을 생성할 수 있습니"
#~ "다. 1 FGPU가 실제로 할당하는 GPU 자원의 양은 관리자 설정에 따라 시스"
#~ "템 별로 다양할 수 있습니다. 예를 들어, 관리자가 하나의 GPU를 다섯 조각"
#~ "으로 분할 설정한 경우, 5 FGPU가 1 물리 GPU, 또는 1 FGPU가 0.2 물리 GPU"
#~ "를 뜻합니다. 이 때 1 FGPU를 설정하여 연산 세션을 생성하면, 그 세션에서"
#~ "는 0.2 물리 GPU에 해당하는 SM(streaming multiprocessor)과 GPU 메모리"
#~ "를 활용할 수 있습니다."

#~ msgid ""
#~ "This time, let's take a look at how to use and manage a running "
#~ "compute session. If you see the Control column in the session list, "
#~ "there are several icons. When you click the first icon, several app "
#~ "services supported by the session will appear as shown in the "
#~ "following figure."
#~ msgstr ""
#~ "이번에는 이미 실행 중인 연산 세션을 사용하고 관리하는 법에 관해 살펴보"
#~ "겠습니다. 세션 리스트의 Control 열을 보면 몇 가지 아이콘이 있습니다. "
#~ "플레이 아이콘을 누르면 다음 그림과 같이 해당 세션이 지원하는 몇 가지 "
#~ "앱 서비스가 뜨게 됩니다."
