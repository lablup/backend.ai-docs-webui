# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Lablup Inc.
# This file is distributed under the same license as the Backend.AI Console
# User Guide package.
# FIRST AUTHOR <jpark@lablup.com>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI Console User Guide 24.09\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-11 12:30+0900\n"
"PO-Revision-Date: 2023-03-25 23:38+0900\n"
"Last-Translator: Jinho Heo <jinho@lablup.com>\n"
"Language: ko\n"
"Language-Team: Lablup\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../mount_vfolder/mount_vfolder.rst:3
msgid "Mounting Folders to a Compute Session"
msgstr "연산 세션에 폴더 마운트"

#: ../../mount_vfolder/mount_vfolder.rst:7
msgid ""
"Backend.AI provides a function to mount storage folders when creating a "
"compute session. When new compute session is started, user will have "
"access to the``/home/work/`` directory. Normal directories and files "
"created under ``/home/work/`` will disappear when the compute session is "
"terminated. This is because compute sessions are dynamically created and "
"deleted based on the container. To preserve data inside a container "
"regardless of the container's lifecycle, a separate host folder must be "
"mounted in the container, and then files must be created within the "
"mounted folder."
msgstr ""
"Backend.AI는 스토리지 폴더 연산 세션 생성 시 마운트 할 수 있는 기능을 제공합니다.연산 세션을 시작하면 사용자는 "
"``/home/work/`` 폴더에 접근 권한을 가지게 되는데, ``/home/work/`` 및 그 하위에 생성된 일반 폴더와 "
"파일은 연산 세션이 삭제되면 함께 사라집니다. 이는 연산 세션이 컨테이너에 기반하여 동적으로 생성/삭제 되기 때문으로, 컨테이너 "
"내부의 데이터를 컨테이너 수명 주기와 상관없이 보존하기 위해서는 별도의 호스트 폴더를 컨테이너에 마운트 한 뒤, 마운트 된 폴더 "
"안에 파일을 생성해야 합니다."

#: ../../mount_vfolder/mount_vfolder.rst:13
msgid ""
"Go to 'Sessions' page and click the 'Start' button. After filling out the"
" 'Session Type', 'Environments & Resource allocation' steps, navigate to "
"the 'Data & Storage' step to see a list of folders that users can mount. "
"From this list, choose the folders to mount and add them, or select "
"multiple folders to mount more. The documentation will explain how to "
"mount two folders, ``user1-ml-test`` and ``user2-vfolder``, and then "
"create a session."
msgstr ""
"'세션' 페이지에서 '시작' 버튼을 누르면 새로운 세션을 생성할 수 있습니다. '세션 타입', '실행 환경 & 자원 할당' 단계를"
" 작성한 후, '데이터 & 폴더' 단계로 이동하면 사용자가 마운트할 수 있는 폴더의 리스트를 확인할 수 있습니다. 해당 리스트에서"
" 마운트 하고자 하는 폴더를 선택하여 추가할 수 있으며, 여러 개의 폴더를 선택하면 다수의 폴더를 마운트 할 수 있습니다. 해당 "
"문서에서는 ``user1-ml-test`` 와 ``user2-vfolder`` 두 개의 폴더를 마운트한 후 세션을 생성하는 법에"
" 대해 설명합니다. "

#: ../../mount_vfolder/mount_vfolder.rst:-1
msgid "Launch a compute session with storage folders"
msgstr "자동 마운트 폴더를 이용하여 연산 세션 환경 구성하기"

#: ../../mount_vfolder/mount_vfolder.rst:25
msgid ""
"By looking at the data and folder information within that project, users "
"can see information such as usage mode, the storage host the folder "
"belongs to, permissions, and more. Note that the 'Data & Storage' step "
"only outputs data folders that are mountable by the current user. For "
"example, folders that belong to other projects cannot be viewed."
msgstr ""
"해당 프로젝트 내의 데이터와 폴더 정보를 살펴보면 사용 모드, 해당 폴더가 속해 있는 스토리지 호스트, 권한 등의 정보를 확인할 수"
" 있습니다. 참고로, '데이터 & 폴더' 단계에서는 현재 사용자가 마운트 가능한 데이터 폴더만 출력됩니다. 다른 "
"프로젝트에 속한 폴더는 해당 메뉴를 통해 조회할 수 없습니다. "

#: ../../mount_vfolder/mount_vfolder.rst:30
msgid ""
"Clicking a 'folder name' in the 'Data & Storage' step will open the "
"folder explorer for that folder. From this, users can view the folders "
"that have been created, create new folders, and upload files. For more "
"detailed instructions related to folders, please refer :ref:`Explore "
"Folder<explore_folder>` section."
msgstr ""
"'데이터 & 폴더' 단계에서 폴더 이름을 클릭하면, '폴더' 정보를 한 눈에 확인할 수 있습니다. 해당 메뉴에서는 생성되어 있는 "
"폴더를 확인하고, 새로운 폴더를 생성하고, 파일을 업로드할 수 있습니다. 자세한 설명은 :ref:`폴더 내용 "
"조회하기<explore_folder>` 를 참조하세요. "

#: ../../mount_vfolder/mount_vfolder.rst:34
msgid ""
"Alternatively, a new virtual folder can be created by clicking the '+' "
"button. For further information on how to create a new folder in session "
"launcher page, please refer :ref:`Create storage "
"folder<create_storage_folder>` section."
msgstr ""
"여기에 더해, '+' 버튼을 클릭하여 새로운 폴더를 생성할 수도 있습니다. 세션 런처에서 새로운 폴더를 생성하는 자세한 방법을"
" 확인하시려면, :ref:`Storage 폴더 생성<create_storage_folder>` 을 참조하세요. "

#: ../../mount_vfolder/mount_vfolder.rst:38
msgid ""
"In the created session, screen terminal window can be brought up by "
"clicking the terminal icon. ``ls`` command will mount ``user1-ml-test` "
"folder and ``user2-vfolder`` under the ``user1-ml-test`` and "
"``user2-vfolder`` folders are mounted under the home directory."
msgstr ""
"생성된 세션에서 터미널 아이콘을 클릭하면 터미널 창을 띄울 수 있습니다. 터미널에서 ``ls`` 명령을 내리면 ``user1-ml-"
"test`` 폴더와 ``user2-vfolder`` 폴더가 홈 디렉토리 하위에 마운트되는 것을 확인할 수 있습니다. "

#: ../../mount_vfolder/mount_vfolder.rst:-1
msgid "Execute terminal app"
msgstr ""

#: ../../mount_vfolder/mount_vfolder.rst:46
msgid ""
"The selected folder will be mounted with its name under ``/home/work/`` "
"inside the compute session, by its default. For example, if folder's name"
" is ``test``, it is mounted on ``/home/work/test``. To customize the "
"mount path, write an absolute path in the 'Path and Alias' input fields. "
"Writing ``/workspace`` in the input field of the ``test`` folder will "
"mount to ``/workspace`` inside the session. Writing a relative path will "
"mount the folder under ``/home/work/`` with the path."
msgstr ""
"선택한 폴더는 기본적으로 연산 세션 내의 ``/home/work/`` 하위에 폴더의 이름으로 마운트 됩니다. 예를 들어, 폴더의 "
"이름이 ``test`` 일 경우, ``/home/work/test`` 에 마운트 됩니다. 만약, 연산 세션 내 마운트 경로를 "
"변경하고 싶다면 '경로 & 대체 이름' 입력 필드에 절대 경로를 입력합니다. 만약, ``test`` 폴더의 마운트 경로를 "
"``/workspace`` 로 입력한 경우에는 ``test`` 폴더가 연산 세션 내 ``/workspace`` 경로에 마운트 "
"됩니다. 상대 경로를 입력하면 ``/home/work/`` 아래에 마운트 됩니다. "

#: ../../mount_vfolder/mount_vfolder.rst:52
msgid ""
"Backend.AI gives an option to preserve files in folders when a compute "
"session is deleted. The example below illustrates what's happening."
msgstr ""
"Backend.AI에서는 연산 세션을 삭제해도 폴더 안의 파일을 보존할 수 있는 옵션을 제공합니다. 아래 예제를 통해 관련된 내용을"
" 확인할 수 있습니다. "

#: ../../mount_vfolder/mount_vfolder.rst:55
msgid ""
"Under the ``user2-vfolder``, create a ``test_file``. Fill the contents "
"with \\\"file inside user2-vfolder\\\"."
msgstr ""
"우선, ``user2-vfolder`` 하위에 ``test_file`` 파일을 생성합니다. 해당 파일의 내용은 《file "
"inside user2-vfolder》로 채우겠습니다. "

#: ../../mount_vfolder/mount_vfolder.rst:-1
msgid "Mounted folders in terminal"
msgstr ""

#: ../../mount_vfolder/mount_vfolder.rst:61
msgid ""
"Running ``ls`` command against ``user2-vfolder``, users can confirm the "
"file was created successfully. Please note the contents of the file can "
"be chekced with ``cat`` command."
msgstr ""
"``user2-vfolder`` 를 대상으로 ``ls`` 명령을 실행해보면 파일이 생성된 것을 확인할 수 있습니다. 참고로, "
"``cat`` 명령을 사용하면 파일 내용을 확인할 수 있습니다. "

#: ../../mount_vfolder/mount_vfolder.rst:64
msgid ""
"Now delete the compute session and go to the Storage page. Locate the "
"``user2-vfolder folder``, open a file explorer and check that the "
"``test_file`` exists. Click the 'download' button in 'Actions' tab to "
"download the file to the local machine and open it to confirm that the "
"contents are \\\"file inside user2-vfolder\\\"."
msgstr ""
"이제 세션을 삭제한 후 Data & Storage 페이지로 이동합니다. ``user2-vfolder`` 폴더를 찾아 클릭하여 파일 "
"탐색기를 열고 ``test_file`` 파일이 존재하는 것을 확인합니다. '작업' 탭의 파일 다운로드 버튼을 클릭하여 파일을 로컬 "
"머신에 내려받은 후, 내용이 \"file inside user2-vfolder\" 임을 확인합니다. "

#: ../../mount_vfolder/mount_vfolder.rst:-1
msgid "Download icon in the folder explorer"
msgstr ""

#: ../../mount_vfolder/mount_vfolder.rst:72
msgid ""
"Performing file management on a mounted folder when you create a compute "
"session, data can be preserved even after users ends the compute session."
msgstr ""
"연산 세션을 생성할 때 폴더를 마운트한 후, 마운트 된 폴더에서 파일 작업을 수행하면 연산 세션이 종료된 이후에도 데이터를 보존할 "
"수 있습니다. "

#: ../../mount_vfolder/mount_vfolder.rst:79
msgid "Configure a compute session environment using an automount folder"
msgstr "자동 마운트 폴더를 이용하여 연산 세션 환경 구성하기"

#: ../../mount_vfolder/mount_vfolder.rst:81
msgid ""
"If a new program or library is required that is not pre-installed in a "
"compute session, a Storage folder attribute and :ref:`automount-folder"
"<automount-folder>`, which is independent of the compute session "
"lifecycle, can be used to install the package. Configure a consistent "
"environment regardless of the type of compute session."
msgstr ""
"연산 세션에 사전 설치되어 있지 않은 새 프로그램이나 라이브러리를 필요로 하는 경우, 연산 세션의 수명 주기와 관계 없는 "
"Storage 폴더 특성과 :ref:`자동 마운트 폴더<automount-folder>` 를 이용해서 패키지를 설치하고, 연산 "
"세션의 종류에 상관없이 일정한 환경을 구성할 수 있습니다. "

#: ../../mount_vfolder/mount_vfolder.rst:88
msgid "Install Python packages via pip"
msgstr "pip를 통한 파이썬 패키지 설치"

#: ../../mount_vfolder/mount_vfolder.rst:90
msgid ""
"Creating a folder named ``.local`` allows a user to install Python user "
"packages in same folder. ``pip`` by default installs the packages in the "
"``.local`` folder under the user's home folder (Please note that "
"automount folder is mounted under user's home folder). So, to keep a "
"Python package called ``tqdm`` installed at all times, regardless of the "
"computing environment, a command like the following could be issued from "
"the terminal:"
msgstr ""
"``.local`` 이라는 이름의 폴더를 생성하면 파이썬 사용자 패키지를 해당 폴더에 설치하고 공유할 수 있습니다. ``pip``로"
" 패키지를 설치하면 사용자 홈 폴더 하위에 있는 ``.local`` 폴더에 패키지를 설치하기 때문입니다. (자동 마운트 폴더는 "
"사용자 홈폴더 하위에 마운트 됩니다.) 따라서, 연산 환경과 상관없이``tqdm`` 이라는 파이썬 패키지의 설치 상태를 항상 "
"유지하려면 터미널에서 다음과 같은 명령을 내릴 수 있습니다. "

#: ../../mount_vfolder/mount_vfolder.rst:100
msgid ""
"After that, when a new compute session is created, the ``.local`` folder "
"where the ``tqdm`` package is installed is automatically mounted, so "
"users can use it without reinstalling the ``tqdm`` package."
msgstr ""
"이후, 연산 세션을 새로 생성하게 되면 ``tqdm`` 패키지가 설키된 ``.local`` 폴더가 자동으로 마운트 되므로, "
"``tqdm`` 패키지를 다시 설치하지 않고 사용할 수 있습니다. "

#: ../../mount_vfolder/mount_vfolder.rst:105
msgid ""
"When using multiple Python versions or sessions with different Python "
"versions, packages may have compatibility issues. This can be "
"circumvented by branching ``PYTHONPATH`` environment variable via the "
"``.bashrc``. This is because the user's ``pip`` package is installed in "
"the path specified in the ``PYTHONPATH``."
msgstr ""
"여러 파이썬 버전이나 다른 파이썬 버전을 사용하는 세션을 사용할 경우 패키지들의 호환성 문제가 있을 수 있습니다. 이를 해결하기 "
"위해, ``.bashrc`` 편집기능을 통해 ``PYTHONPATH`` 를 분기하는 방식의 적용이 가능합니다. 해당 방법을 "
"사용하면, ``PYTHONPATH`` 환경 변수에 지정된 경로에 사용자 ``pip`` 패키지를 설치할 수 있습니다."

#: ../../mount_vfolder/mount_vfolder.rst:112
msgid "Install packages via Homebrew"
msgstr "Homebrew를 통해 패키지 설치"

#: ../../mount_vfolder/mount_vfolder.rst:114
msgid ""
"Package managers like Ubuntu ``apt`` or CentOS ``yum`` usually require "
"the ``root`` permission. For security reasons, ``sudo`` and ``root`` "
"accesses are blocked by default in Backend.AI's compute session "
"(Depending on the configuration, this may be allowed), so we recommend to"
" use `Homebrew on Linux <https://docs.brew.sh/Homebrew-on-Linux>`_ which "
"does not require ``sudo``."
msgstr ""
"Ubuntu의 ``apt`` 나 CentOS의 ``yum`` 같은 패키지 매니저는 일반적으로 ``root`` 권한을 필요로 합니다."
"  Backend.AI의 연산 세션은 보안을 위해 ``sudo`` 권한 및 ``root`` 접근이 기본적으로 막혀 있기 때문에 "
"(설정에 따라 접근이 허용될 수도 있습니다), 패키지 설치를 위해 ``sudo`` 접근이 필요하지 않은 `Homebrew on "
"Linux <https://docs.brew.sh/Homebrew-on-Linux>`_ 사용을 권장하고 있습니다. "

#: ../../mount_vfolder/mount_vfolder.rst:117
msgid "Homebrew can be configured as follows:"
msgstr "Homebrew는 다음과 같이 구성할 수 있습니다. "

#: ../../mount_vfolder/mount_vfolder.rst:119
msgid "Create ``.linuxbrew`` folder in Data & Storage page."
msgstr "Data & Storage 페이지에서 ``.linuxbrew`` 폴더 생성 "

#: ../../mount_vfolder/mount_vfolder.rst:120
msgid ""
"Create a compute session (``.linuxbrew`` folder is automatically mounted "
"at ``/home/linuxbrew/.linuxbrew``)."
msgstr "연산 세션을 생성(``.linuxbrew`` 폴더가 자동으로 ``/home/linuxbrew/.linuxbrew`` 위치에 마운트) "

#: ../../mount_vfolder/mount_vfolder.rst:122
msgid "Install Homebrew in the compute session, if not yet installed."
msgstr "연산 세션 내에서 Homebrew 설치(아직 설치하지 않은 경우) "

#: ../../mount_vfolder/mount_vfolder.rst:128
msgid "Homebrew packages can be installed like following:"
msgstr "Homebrew 패키지는 다음과 같이 설치할 수 있습니다. "

#: ../../mount_vfolder/mount_vfolder.rst:136
msgid ""
"``brew`` installs packages under ``/home/linuxbrew/.linuxbrew`` which is "
"automatically mounted when ``.linuxbrew`` folder exists. So, if an "
"automount folder named ''.linuxbrew'' is created, the Homebrew packages "
"previously installed can be used again, even if the compute session is "
"deleted and a new compute session is created."
msgstr ""
"``brew`` 는 패키지를 ``/home/linuxbrew/.linuxbrew`` 디렉토리 하위에 설치하는데, "
"``.linuxbrew`` 라는 데이터 폴더가 있다면 연산 세션 생성 시 자동으로 그 위치에 마운트합니다. 따라서, "
"``.linuxbrew`` 라는 자동 마운트 폴더를 생성해두면 연산 세션을 삭제하고 새로운 연산 세션을 생성하더라도 기존에 설치했던"
" Homebrew 패키지를 다시 사용할 수 있습니다. "

#~ msgid ""
#~ "Go to 'Sessions' page and click "
#~ "the 'Start' button. After filling out"
#~ " the 'Session Type', 'Environments & "
#~ "Resource allocation' pages, navigate to "
#~ "the 'Data & Folders' page to see"
#~ " a list of folders that users "
#~ "can mount. From this list, choose "
#~ "the folders to mount and add them,"
#~ " or select multiple folders to mount"
#~ " more. The documentation will explain "
#~ "how to mount two folders, ``user1-ml-"
#~ "test`` and ``user2-vfolder``, and then "
#~ "create a session. "
#~ msgstr ""
#~ "'세션' 페이지에서 '시작' 버튼을 누르면 새로운 세션을"
#~ " 생성할 수 있습니다. '세션 타입', '실행 환경"
#~ " & 자원 할당' 페이지를 작성한 후, '데이터 "
#~ "& 폴더' 페이지로 이동하면 사용자가 마운트할 수 "
#~ "있는 폴더의 리스트를 확인할 수 있습니다. 해당 "
#~ "리스트에서 마운트 하고자 하는 폴더를 선택하여 추가할 "
#~ "수 있으며, 여러 개의 폴더를 선택하면 다수의 "
#~ "폴더를 마운트 할 수 있습니다. 해당 Docs에서는 "
#~ "``user1-ml-test`` 와 ``user2-vfolder`` 두 "
#~ "개의 폴더를 마운트한 후 세션을 생성하는 법에 대해"
#~ " 설명합니다. "

#~ msgid ""
#~ "By looking at the data and folder"
#~ " information within that project, users "
#~ "can see information such as usage "
#~ "mode, the storage host the folder "
#~ "belongs to, permissions, and more. Note"
#~ " that the 'Data & Folders' page "
#~ "only outputs data folders that are "
#~ "mountable by the current user. For "
#~ "example, folders that belong to other"
#~ " projects cannot be viewed. "
#~ msgstr ""
#~ "해당 프로젝트 내의 데이터와 폴더 정보를 살펴보면 "
#~ "사용 모드, 해당 폴더가 속해 있는 스토리지 "
#~ "호스트, 권한 등의 정보를 확인할 수 있습니다. "
#~ "참고로, '데이터 & 폴더' 페이지에는 현재 사용자가 "
#~ "마운트 가능한 데이터 폴더만 출력됩니다. 예를 들어, "
#~ "다른 프로젝트에 속한 폴더는 해당 메뉴를 통해 "
#~ "조회할 수 없습니다. "

#~ msgid ""
#~ "Accessing the 'Data & Storage' side "
#~ "menu will show the information related"
#~ " to the folders. From this menu, "
#~ "users can view the folders that "
#~ "have been created, create new folders,"
#~ " and upload files. For more detailed"
#~ " instructions related to folders, please"
#~ " refer :ref:`Explore Folder<explore_folder>` "
#~ "section. "
#~ msgstr ""
#~ "'데이터 & 스토리지' 사이드 메뉴에 접근할 경우, "
#~ "'폴더' 정보를 한 눈에 확인할 수 있습니다. 해당"
#~ " 메뉴에서는 생성되어 있는 폴더를 확인하고, 새로운 "
#~ "폴더를 생성하고, 파일을 업로드할 수 있습니다. 해당 "
#~ "메뉴에 대한 자세한 설명은 :ref:`폴더 내용 "
#~ "조회하기<explore_folder>` 를 참조하세요. "

#~ msgid ""
#~ "Backend.AI gives an option to preserve"
#~ " files in folders when a compute "
#~ "session is deleted. The example below"
#~ " illustrates what's happening. Under the"
#~ " ``user2-vfolder``, create a ``test_file``Fill"
#~ " the contents with \"file inside "
#~ "user2-vfolder\"."
#~ msgstr ""
#~ "Backend.AI에서는 연산 세션을 삭제해도 폴더 안의 "
#~ "파일을 보존할 수 있는 옵션을 제공합니다. 아래 "
#~ "예제를 통해 관련된 내용을 확인할 수 있습니다. "
#~ "우선, ``user2-vfolder`` 하위에 ``test_file`` 파일을"
#~ " 생성합니다. 해당 파일의 내용은 《file inside "
#~ "user2-vfolder》로 채우겠습니다. "

#~ msgid ""
#~ "Performing file management on a mounted"
#~ " folder when you create a compute "
#~ "session, data can be preserved even "
#~ "after users ends the compute session."
#~ " "
#~ msgstr ""
#~ "연산 세션을 생성할 때 폴더를 마운트한 후, 마운트"
#~ " 된 폴더에서 파일 작업을 수행하면 연산 세션이 "
#~ "종료된 이후에도 데이터를 보존할 수 있습니다. "

#~ msgid ""
#~ "Configure a consistent environment regardless"
#~ " of the type of compute session."
#~ " \n"
#~ msgstr ""
#~ "연산 세션에 사전 설치되어 있지 않은 새 "
#~ "프로그램이나 라이브러리를 필요로 하는 경우, 연산 세션의"
#~ " 수명 주기와 관계 없는 Storage 폴더 특성과"
#~ " :ref:`자동 마운트 폴더<automount-folder>` 를 "
#~ "이용해서 패키지를 설치하고, 연산 세션의 종류에 상관없이"
#~ " 일정한 환경을 구성할 수 있습니다. "

#~ msgid ""
#~ "Let's go to the Sessions page and"
#~ " click the START button to create "
#~ "a new compute session. In the "
#~ "Folders to mount panel in the "
#~ "session creation dialog, you can see "
#~ "a list of storage folders that can"
#~ " be mount. By clicking the folder "
#~ "you want to mount, you can mount"
#~ " it. You can also mount multiple "
#~ "folders simultaneously by clicking multiple"
#~ " items. In this example, we will "
#~ "mount two folders, ``user1-ml-test`` and"
#~ " ``user2-vfolder``, and then create a "
#~ "compute session."
#~ msgstr ""

#~ msgid ""
#~ "Folders to mount only lists the "
#~ "data folders that the user can "
#~ "currently mount. For example, project "
#~ "folders used by other projects are "
#~ "not exposed in Folders to mount. "
#~ "The storage host for each folder "
#~ "is also displayed under the folder's "
#~ "name."
#~ msgstr ""

#~ msgid ""
#~ "By clicking on a folder name, you"
#~ " can use ''Folder Explore''' to view"
#~ " the stored files or folders inside"
#~ " the folder or upload new files "
#~ "or folders. For more information on "
#~ "how to use it, please refer "
#~ ":ref:`Explore Folder<explore_folder>` section."
#~ msgstr ""

#~ msgid ""
#~ "Let's create a ``test_file`` under "
#~ "``user2-vfolder`` to see if the file "
#~ "can be preserved after the compute "
#~ "session is terminated. The contents of"
#~ " this file will be \"file inside "
#~ "user2-vfolder\"."
#~ msgstr ""

#~ msgid ""
#~ "Like this, when creating a compute "
#~ "session, you can mount storage folders"
#~ " and perform any file operations on"
#~ " those mounted folders to save data"
#~ " even after the compute session "
#~ "termination."
#~ msgstr ""

#~ msgid ""
#~ "Sometimes you need a new program "
#~ "or library that is not pre-"
#~ "installed in a compute session. In "
#~ "that case, you can install packages "
#~ "and configure a certain environment "
#~ "regardless of the type of compute "
#~ "session by using the Storage folder, "
#~ "which persists independent of session "
#~ "lifecycle, and the :ref:`automount folder"
#~ "<automount-folder>`."
#~ msgstr ""

