# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Lablup Inc.
# This file is distributed under the same license as the Backend.AI Console
# User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI Console User Guide 19.09\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-26 01:24+0900\n"
"PO-Revision-Date: 2020-03-27 15:07+0900\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Last-Translator: Jonghyun Park <jpark@lablup.com>\n"
"Language-Team: Lablup\n"
"Language: ko\n"
"X-Generator: Poedit 2.3\n"

#: ../../mount_vfolder/mount_vfolder.rst:3
msgid "Create a Compute Session with Mounted Folders"
msgstr "폴더를 마운트 하여 연산 세션 생성"

#: ../../mount_vfolder/mount_vfolder.rst:5
msgid ""
"When you start a compute session, the user has access to the ``/home/"
"work/`` directory, and the normal directores and files created under ``/"
"home/work/`` will disappear when the compute session is destroyed. This "
"is because compute sessions are dynamically created and deleted based on "
"the container. To preserve the data inside the container independent of "
"the life cycle of the container, a separate host folder must be mounted "
"into the container, and then files must be created within the mounted "
"folder. Backend.AI provides a function to mount storage folders when "
"creating a compute session."
msgstr ""
"연산 세션을 시작하면 사용자는 ``/home/work/`` 폴더에 접근 권한을 가지게 "
"되는데, ``/home/work/`` 및 그 하위에 생성된 일반 폴더와 파일은 연산 세션"
"이 삭제되면 함께 사라지게 됩니다. 이는 연산 세션이 컨테이너에 기반하여 동"
"적으로 생성/삭제 되기 때문으로, 컨테이너 내부의 데이터를 컨테이너의 수명 "
"주기와 상관없이 보존하려면 별도의 호스트 폴더를 컨테이너에 마운트 한 뒤 "
"마운트 된 폴더 내에 파일을 생성해야 합니다. Backend.AI에서는 Storage 폴"
"더 연산 세션 생성 시 마운트 할 수 있는 기능을 제공하고 있습니다."

#: ../../mount_vfolder/mount_vfolder.rst:14
msgid ""
"Let's go to the Sessions page and click the START button to create a new "
"compute session. In the session create dialog, click Folders to mount to "
"see a list of storage folders that a user can mount. Among them, you can "
"add them by clicking the folder you want to mount. You can also mount "
"multiple folders simultaneously by clicking multiple items. In this "
"example, we will mount two folders, ``user1-ml-test`` and ``user2-"
"vfolder``, and then create a compute session."
msgstr ""
"Sessions 페이지로 이동해서 START 버튼을 눌러 새로운 세션을 생성해 보겠습"
"니다. 세션 생성 다이얼로그에서 Folders to mount를 클릭하면 현재 사용자가 "
"마운트 할 수 있는 폴더의 리스트를 볼 수 있습니다. 이 중에서 마운트 하고"
"자 하는 폴더를 클릭하여 추가할 수 있습니다. 여러 개를 클릭해서 여러 폴더"
"를 동시에 마운트 할 수도 있습니다. 이 예제에서는 ``user1-ml-test``와 "
"``user2-vfolder`` 두 개의 폴더를 마운트한 후 세션을 생성 하겠습니다."

#: ../../mount_vfolder/mount_vfolder.rst:26
msgid ""
"Now, open the terminal by clicking the terminal icon in the created "
"session. If you run ``ls`` command in the terminal, you can see that the "
"``user1-ml-test`` and ``user2-vfolder`` folders are mounted under the "
"home directory. Let's create a ``test_file`` under ``user2-vfolder`` to "
"see if the file can be preserved after the compute session is destroyed. "
"The contents of this file will filled with \"file inside user2-vfolder\"."
msgstr ""
"생성된 세션에서 터미널 아이콘을 클릭해 터미널 창을 띄워 봅시다. 터미널에"
"서 ``ls`` 명령을 내려보면 ``user1-ml-test`` 폴더와 ``user2-vfolder`` 폴더"
"가 홈 디렉토리 하위에 마운트 되어 보이는 것을 알 수 있습니다. 연산 세션"
"이 삭제된 후에도 파일을 보존할 수 있는지 확인하기 위해 ``user2-vfolder`` "
"하위에 ``test_file`` 파일을 생성해 보겠습니다. 이 파일의 내용은 \"file "
"inside user2-vfolder\"로 채우겠습니다."

#: ../../mount_vfolder/mount_vfolder.rst:36
msgid ""
"If you run ``ls`` command against ``user2-vfolder``, you can see that "
"the file was created successfully. Also note the contents of the file "
"with the ``cat`` command."
msgstr ""
"``user2-vfolder`` 를 대상으로 ``ls`` 명령을 실행해보면 파일이 잘 생성된 것"
"을 확인할 수 있습니다. ``cat`` 명령으로 파일 내용도 확인해 보았습니다."

#: ../../mount_vfolder/mount_vfolder.rst:40
msgid ""
"Now delete the compute session and go to the Storage page. Locate the "
"``user2-vfolder folder``, open a file explorer and check that the file "
"``test_file`` exists. Click the file download button in Actions to "
"download the file to the local machine and open it in an editor to "
"confirm that the contents of the file are \"file inside user2-vfolder\"."
msgstr ""
"이제 세션을 삭제한 후 Data & Storage 페이지로 이동합니다. ``user2-"
"vfolder`` 폴더를 찾아 파일 탐색기를 열고 ``test_file`` 파일이 존재하는 것"
"을 확인합니다. Actions의 파일 다운로드 버튼을 클릭하여 파일을 로컬 머신"
"에 받아 내용을 확인해서 파일의 내용이 \"file inside user2-vfolder\" 임을 "
"확인합니다."

#: ../../mount_vfolder/mount_vfolder.rst:49
msgid ""
"Like this, when creating a compute session, you can mount storage "
"folders and perform any file operations on those mounted folders to save "
"data even after the compute session termination."
msgstr ""
"이처럼 연산 세션을 생성할 때 폴더 마운트를 하고, 마운트 된 폴더에서 파일 "
"작업을 수행하면 연산 세션이 종료된 이후에도 데이터를 보존할 수 있습니다."
