# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Lablup Inc.
# This file is distributed under the same license as the Backend.AI Web-UI
# User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI Web-UI User Guide 24.03\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-20 16:05+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../mount_vfolder/mount_vfolder.rst:5
msgid "Mounting Folders to a Compute Session"
msgstr "コンピュートセッションへのフォルダのマウント"

#: ../../mount_vfolder/mount_vfolder.rst:7
msgid ""
"When you start a compute session, the user has access to the ``/home/work/``"
" directory, and the normal directories and files created under "
"``/home/work/`` will disappear when the compute session is terminated. This "
"is because compute sessions are dynamically created and deleted based on the"
" container. To preserve the data inside the container independent of the "
"life cycle of the container, a separate host folder must be mounted into the"
" container, and then files must be created within the mounted folder. "
"Backend.AI provides a function to mount storage folders when creating a "
"compute session."
msgstr ""
"計算セッションを開始すると、ユーザーは ``/home/work/`` ディレクトリにアクセスでき、``/home/work/`` "
"以下で作成された通常のディレクトリやファイルは計算セッションが終了すると消えてしまいます。これは、計算セッションがコンテナに基づいて動的に作成および削除されるためです。コンテナ内のデータをコンテナのライフサイクルに依存せずに保持するには、別のホストフォルダをコンテナにマウントし、マウントされたフォルダ内にファイルを作成する必要があります。Backend.AI"
" は、計算セッションを作成する際にストレージフォルダをマウントする機能を提供しています。"

#: ../../mount_vfolder/mount_vfolder.rst:16
msgid ""
"Let's go to the Sessions page and click the START button to create a new "
"compute session. In the Folders to mount panel in the session creation "
"dialog, you can see a list of storage folders that can be mount. By clicking"
" the folder you want to mount, you can mount it. You can also mount multiple"
" folders simultaneously by clicking multiple items. In this example, we will"
" mount two folders, ``user1-ml-test`` and ``user2-vfolder``, and then create"
" a compute session."
msgstr ""
"セッションページに移動し、STARTボタンをクリックして新しいコンピュートセッションを作成します。セッション作成ダイアログの「フォルダをマウント」パネルでは、マウント可能なストレージフォルダのリストが表示されます。マウントしたいフォルダをクリックすることでマウントが可能です。複数のアイテムをクリックすることで、複数のフォルダを同時にマウントすることもできます。この例では、``user1-ml-"
"test`` と ``user2-vfolder`` の2つのフォルダをマウントし、その後にコンピュートセッションを作成します。"

#: ../../mount_vfolder/mount_vfolder.rst:-1
msgid "Launch a compute session with storage folders"
msgstr "ストレージフォルダを使用してコンピュートセッションを開始します"

#: ../../mount_vfolder/mount_vfolder.rst:29
msgid ""
"Folders to mount only lists the data folders that the user can currently "
"mount. For example, project folders used by other projects are not exposed "
"in Folders to mount. The storage host for each folder is also displayed "
"under the folder's name."
msgstr ""
"マウントするフォルダには、ユーザーが現在マウントできるデータフォルダのみが一覧表示されます。例えば、他のプロジェクトで使用されているプロジェクトフォルダは、マウントするフォルダには表示されません。各フォルダのストレージホストは、そのフォルダの名前の下に表示されます。"

#: ../../mount_vfolder/mount_vfolder.rst:34
msgid ""
"Now, open the terminal by clicking the terminal icon in the created session."
" If you run ``ls`` command in the terminal, you can see that the ``user1-ml-"
"test`` and ``user2-vfolder`` folders are mounted under the home directory."
msgstr ""
"作成したセッションで端末アイコンをクリックして端末を開きます。端末で ``ls`` コマンドを実行すると、``user1-ml-test`` "
"フォルダーと ``user2-vfolder`` フォルダーがホームディレクトリにマウントされていることが確認できます。"

#: ../../mount_vfolder/mount_vfolder.rst:39
msgid ""
"The selected folder, by default, will be mounted with its name under "
"``/home/work/`` inside the compute session. For example, if a folder's name "
"is ``test``, it is mounted on ``/home/work/test``. In case you want to "
"customize the mount path, write the absolute path in the Path & Alias input "
"field. If you write ``/workspace`` in the input field for the ``test`` "
"folder, it will be mounted on ``/workspace`` inside the session. Writing a "
"relative path will mount the folder under ``/home/work/`` with the path."
msgstr ""
"選択されたフォルダは、デフォルトで計算セッション内の ``/home/work/`` の下にその名前でマウントされます。例えば、フォルダの名前が "
"``test`` の場合、それは ``/home/work/test`` にマウントされます。マウントパスをカスタマイズしたい場合は、Path & "
"Alias 入力フィールドに絶対パスを書き込んでください。例えば、``test`` フォルダの入力フィールドに ``/workspace`` "
"と書くと、それはセッション内で ``/workspace`` にマウントされます。相対パスを書くと、そのパスで ``/home/work/`` "
"の下にフォルダがマウントされます。"

#: ../../mount_vfolder/mount_vfolder.rst:47
msgid ""
"Let's create a ``test_file`` under ``user2-vfolder`` to see if the file can "
"be preserved after the compute session is terminated. The contents of this "
"file will be \"file inside user2-vfolder\"."
msgstr ""
"``user2-vfolder`` の下に ``test_file`` "
"を作成し、コンピュートセッションが終了した後もファイルが保持されるかどうかを確認してみましょう。このファイルの内容は \"file inside "
"user2-vfolder\" です。"

#: ../../mount_vfolder/mount_vfolder.rst:-1
msgid "Mounted folders in terminal"
msgstr "端末にマウントされたフォルダ"

#: ../../mount_vfolder/mount_vfolder.rst:54
msgid ""
"If you run ``ls`` command against ``user2-vfolder``, you can see that the "
"file was created successfully. Also note the contents of the file with the "
"``cat`` command."
msgstr ""
"``user2-vfolder`` に対して ``ls`` コマンドを実行すると、ファイルが正常に作成されたことが確認できます。また、``cat`` "
"コマンドを使用してファイルの内容を確認してください。"

#: ../../mount_vfolder/mount_vfolder.rst:58
msgid ""
"Now delete the compute session and go to the Storage page. Locate the "
"``user2-vfolder folder``, open a file explorer and check that the file "
"``test_file`` exists. Click the file download button in Actions to download "
"the file to the local machine and open it to confirm that the contents of "
"the file are \"file inside user2-vfolder\"."
msgstr ""
"コンピュートセッションを削除し、ストレージページに移動します。``user2-vfolder "
"folder`` を見つけ、ファイルエクスプローラーを開いてファイル ``test_file`` が存在することを確認します。アクション内のファイルダウンロードボタンをクリックして、ファイルをローカルマシンにダウンロードし、開いてファイルの内容が「file"
" inside user2-vfolder」であることを確認します。"

#: ../../mount_vfolder/mount_vfolder.rst:-1
msgid "Download icon in the folder explorer"
msgstr "フォルダーエクスプローラーのダウンロードアイコン"

#: ../../mount_vfolder/mount_vfolder.rst:67
msgid ""
"Like this, when creating a compute session, you can mount storage folders "
"and perform any file operations on those mounted folders to save data even "
"after the compute session termination."
msgstr ""
"このように、コンピュートセッションを作成する際にストレージフォルダをマウントし、マウントされたフォルダ上で任意のファイル操作を実行することで、コンピュートセッション終了後もデータを保存することができます。"

#: ../../mount_vfolder/mount_vfolder.rst:75
msgid "Configure a compute session environment using an automount folder"
msgstr "自動マウントフォルダを使用して計算セッション環境を構成する"

#: ../../mount_vfolder/mount_vfolder.rst:77
msgid ""
"Sometimes you need a new program or library that is not pre-installed in a "
"compute session. In that case, you can install packages and configure a "
"certain environment regardless of the type of compute session by using the "
"Storage folder, which persists independent of session lifecycle, and the "
":ref:`automount folder<automount-folder>`."
msgstr ""
"コンピュートセッションに事前インストールされていない新しいプログラムやライブラリが必要な場合があります。その場合、Storageフォルダ（セッションのライフサイクルに依存しない保持機能を持つ）と"
" :ref:`automount フォルダ<automount-folder>` "
"を使用することで、コンピュートセッションの種類に関係なくパッケージをインストールし、特定の環境を構成することができます。"

#: ../../mount_vfolder/mount_vfolder.rst:86
msgid "Install Python packages via pip"
msgstr "pipでPythonパッケージをインストールする"

#: ../../mount_vfolder/mount_vfolder.rst:88
msgid ""
"Creating a folder named ``.local`` allows a user to install Python user "
"packages in that folder. This is because ``pip`` by default installs the "
"packages in the ``.local`` folder under the user's home folder (note that "
"automount folder is mounted under user's home folder). So, if you want to "
"install and keep the Python package ``tqdm`` regardless of the type of "
"computing environment, you can issue the following command in your terminal:"
msgstr ""
"``.local`` という名前のフォルダーを作成すると、そのフォルダーにPythonユーザーパッケージをインストールすることができます。これは、``pip`` がデフォルトでユーザーホームフォルダー（オートマウントフォルダーがユーザーホームフォルダーの下にママウントされている点ウントされている点に注意）内の ``.local`` フォルダーにパッケージをインストールするためです。したがって、コンピューティング環境の種類に関係なくPythonパッケージ ``tqdm`` をインストールして保持したい場合、次のコマンドをターミナルで発行できます。"

#: ../../mount_vfolder/mount_vfolder.rst:99
msgid ""
"After that, when a new compute session is created, the ``.local`` folder "
"where the ``tqdm`` package is installed is automatically mounted, so you can"
" use the ``tqdm`` package without reinstalling."
msgstr ""
"その後、新しいコンピュートセッションが作成されると、``tqdm`` パッケージがインストールされている ``.local`` "
"フォルダが自動的にマウントされるため、再インストールすることなく ``tqdm`` パッケージを使用できます。"

#: ../../mount_vfolder/mount_vfolder.rst:105
msgid ""
"If you spawn multiple sessions that use different Python versions, there may"
" be compatibility issues with the packages. This can be circumvented by "
"branching ``PYTHONPATH`` environment variable via the ``.bashrc``. This is "
"because the user's ``pip`` package is installed in the path specified in the"
" ``PYTHONPATH``."
msgstr ""
"異なるPythonバージョンを使用する複数のセッションを生成した場合、パッケージに互換性の問題が発生する可能性があります。これは、``.bashrc`` を介して ``PYTHONPATH`` 環境変数を分岐させることで回避できます。これは、ユーザーの ``pip`` パッケージが ``PYTHONPATH`` で指定されたパスにインストールされるためです。"

#: ../../mount_vfolder/mount_vfolder.rst:114
msgid "Install packages via Homebrew"
msgstr "Homebrew を介してパッケージをインストールする"

#: ../../mount_vfolder/mount_vfolder.rst:116
msgid ""
"Package managers like Ubuntu ``apt`` or CentOS ``yum`` usually require the "
"``root`` permission. For security reasons, ``sudo`` and ``root`` accesses "
"are blocked by default in Backend.AI's compute session (it may be allowed "
"depending on the configuration), so we recommend to use `Homebrew on Linux "
"<https://docs.brew.sh/Homebrew-on-Linux>`_ which does not require ``sudo``."
msgstr ""
"Ubuntuの ``apt`` やCentOSの ``yum`` のようなパッケージマネージャーは通常 ``root`` の権限を必要とします。セキュリティ上の理由から、Backend.AIのコンピュートセッションではデフォルトで ``sudo`` と ``root`` のアクセスはブロックされています（設定に応じて許可される場合もあります）が、``sudo`` を必要としない"
" `Homebrew on Linux <https://docs.brew.sh/Homebrew-on-Linux>`_ の使用を推奨します。"

#: ../../mount_vfolder/mount_vfolder.rst:122
msgid "Homebrew can be configured as follows:"
msgstr "Homebrewは次のように設定できます。"

#: ../../mount_vfolder/mount_vfolder.rst:124
msgid "Create ``.linuxbrew`` folder in Data & Storage page."
msgstr "Data & Storageページで ``.linuxbrew`` フォルダーを作成します。"

#: ../../mount_vfolder/mount_vfolder.rst:125
msgid ""
"Create a compute session (``.linuxbrew`` folder is automatically mounted at "
"``/home/linuxbrew/.linuxbrew``)."
msgstr ""
"コンピュートセッションを作成します（``.linuxbrew`` フォルダは自動的に ``/home/linuxbrew/.linuxbrew`` にマウントされます）。"

#: ../../mount_vfolder/mount_vfolder.rst:127
msgid "Install Homebrew in the compute session, if not yet installed."
msgstr "まだインストールされていない場合は、計算セッションにHomebrewをインストールします。"

#: ../../mount_vfolder/mount_vfolder.rst:133
msgid "Homebrew packages can be installed like:"
msgstr "Homebrew パッケージは次のようにインストールできます:"

#: ../../mount_vfolder/mount_vfolder.rst:141
msgid ""
"``brew`` installs packages under ``/home/linuxbrew/.linuxbrew`` which is "
"automatically mounted when ``.linuxbrew`` folder exists. So, if you create a"
" automount folder named ``.linuxbrew``, Homebrew packages can be kept after "
"the compute session is destroyed and then reused for the next compute "
"session."
msgstr ""
"``brew`` はパッケージを ``/home/linuxbrew/.linuxbrew`` の下にインストールしますが、これは "
"``.linuxbrew`` フォルダが存在する場合に自動的にマウントされます。したがって、``.linuxbrew`` "
"という名前の自動マウントフォルダを作成すると、計算セッションが終了しても Homebrew "
"パッケージを保持し、次の計算セッションで再利用することができます。"
