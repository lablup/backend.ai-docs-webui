# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Lablup Inc.
# This file is distributed under the same license as the Backend.AI Web-UI
# User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Backend.AI Web-UI User Guide 24.03\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-20 16:05+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../sftp_to_container/sftp_to_container.rst:5
msgid "SSH/SFTP Connection to a Compute Session"
msgstr "SSH/SFTP によるコンピュートセッションへの接続"

#: ../../sftp_to_container/sftp_to_container.rst:7
msgid ""
"Backend.AI supports SSH/SFTP connection to the created compute sessions "
"(containers). In this section, we will learn how to do it."
msgstr ""
"Backend.AIは、作成したコンピュートセッション（コンテナ）へのSSH/SFTP接続をサポートしています。このセクションでは、その方法を学びます。"

#: ../../sftp_to_container/sftp_to_container.rst:11
msgid ""
"From 24.03 SSH/SFTP connection feature is available in both Web browser and "
"WebUI Desktop application. When the version is 23.09 or lower version, you "
"need to use WebUI Desktop app. Desktop app can be downloaded a panel from "
"the Summary page. Using this panel, the compatible version will be "
"downloaded automatically."
msgstr ""
"24.03からSSH/SFTP接続機能がウェブブラウザとWebUIデスクトップアプリケーションの両方で利用可能です。バージョンが23.09以下の場合、WebUIデスクトップアプリを使用する必要があります。デスクトップアプリはサマリーページのパネルからダウンロードできます。このパネルを使用すると、互換性のあるバージョンが自動的にダウンロードされます。"

#: ../../sftp_to_container/sftp_to_container.rst:19
msgid ""
"You can also download the app from https://github.com/lablup/backend.ai-"
"webui/releases. Make sure to download the compatible version of the Web-UI "
"in this case. You can check the Web-UI version by clicking on the \"About "
"Backend.AI\" sub-menu located in the preference menu on the upper-right side"
" of the GUI."
msgstr ""
"https://github.com/lablup/backend.ai-webui/releases "
"からアプリをダウンロードすることもできます。この場合、互換性のあるバージョンのWeb-"
"UIをダウンロードするようにしてください。GUIの右上にある設定メニューの「About Backend.AI」サブメニューをクリックして、Web-"
"UIのバージョンを確認できます。"

#: ../../sftp_to_container/sftp_to_container.rst:44
msgid "For Linux / Mac"
msgstr "Linux / Mac 用"

#: ../../sftp_to_container/sftp_to_container.rst:46
msgid ""
"First, create a compute session, then click the app icon (first button) in "
"Control, followed by SSH / SFTP icon. Then, a daemon that allows SSH/SFTP "
"access from inside the container will be initiated, and the Web-UI app "
"interacts with the daemon through a local proxy service."
msgstr ""
"まず、計算セッションを作成し、コントロール内のアプリアイコン（最初のボタン）をクリックし、その後にSSH/SFTPアイコンをクリックします。すると、コンテナ内部からのSSH/SFTPアクセスを許可するデーモンが起動し、Web-"
"UIアプリはローカルプロキシサービスを通じてデーモンと対話します。"

#: ../../sftp_to_container/sftp_to_container.rst:52
msgid ""
"You cannot establish a SSH/SFTP connection to the session until you click "
"the SSH/SFTP icon. When you close the Web-UI app and launch it again, the "
"connection between the local proxy and the Web-UI app is initialized, so the"
" SSH/SFTP icon must be clicked again."
msgstr ""
"SSH/SFTP接続は、SSH/SFTPアイコンをクリックするまで、セッションに対して確立できません。Web-"
"UIアプリを閉じて再度起動すると、ローカルプロキシとWeb-"
"UIアプリ間の接続が初期化されるため、再度SSH/SFTPアイコンをクリックする必要があります。"

#: ../../sftp_to_container/sftp_to_container.rst:57
msgid ""
"Next, a dialog containing SSH/SFTP connection information will be pop up. "
"Remember the address (especially the assigned port) written in the SFTP URL "
"and click the download link to save the ``id_container`` file on the local "
"machine. This file is an automatically generated SSH private key. Instead of"
" using the link, you can also download the ``id_container`` file located "
"under ``/home/work/`` with your web terminal or Jupyter Notebook. The auto-"
"generated SSH key may change when new session is created. In that case, it "
"must be downloaded again."
msgstr ""
"次に、SSH/SFTP接続情報を含むダイアログが表示されます。SFTP "
"URLに書かれているアドレス（特に割り当てられたポート）を覚えておいて、ダウンロードリンクをクリックし、``id_container`` "
"ファイルをローカルマシンに保存します。このファイルは自動生成されたSSH秘密鍵です。このリンクを使用する代わりに、WebターミナルやJupyter "
"Notebookを使用して、``/home/work/`` にある ``id_container`` "
"ファイルをダウンロードすることもできます。新しいセッションが作成されると、自動生成されたSSHキーは変更される場合があります。その場合、再度ダウンロードする必要があります。"

#: ../../sftp_to_container/sftp_to_container.rst:-1
msgid "Starting SSH/SFTP daemon inside a compute session (container)"
msgstr "コンピュートセッション（コンテナ）内でSSH/SFTPデーモンを起動"

#: ../../sftp_to_container/sftp_to_container.rst:69
msgid ""
"To SSH connect to the compute session with the downloaded SSH private key, "
"you run the following command in the shell environment. You should write the"
" path to the downloaded ``id_container`` file after ``-i`` option and the "
"assigned port number after ``-p`` option. The user inside the compute "
"session is usually set to ``work``, but if your session uses other account, "
"the ``work`` part in ``work@127.0.0.1`` should be changed to the actual "
"session account.  If you run the command correctly, you can see that SSH "
"connection is made to the compute session and you are welcomed by the "
"container's shell environment."
msgstr ""
"ダウンロードしたSSH秘密鍵を使ってコンピュートセッションにSSH接続するには、シェル環境で以下のコマンドを実行します。``-i`` オプションの後にダウンロードした ``id_container`` ファイルへのパスを、``-p`` オプションの後に割り当てられたポート番号を記述します。コンピュートセッション内のユーザーは通常 ``work`` に設定されていますが、セッションが他のアカウントを使用している場合、``work@127.0.0.1`` の ``work`` 部分を実際のセッションアカウントに変更する必要があります。コマンドを正しく実行すると、SSH接続がコンピュートセッションに対して行われ、コンテナのシェル環境に歓迎されていることが確認できます。"

#: ../../sftp_to_container/sftp_to_container.rst:88
msgid ""
"Connecting by SFTP would almost be the same. After running the SFTP client "
"and setting public key-based connection method, simply specify "
"``id_container`` as the SSH private key. Each FTP client may adopt different"
" way, so refer to each FTP client manual for details."
msgstr ""
"SFTPによる接続もほとんど同じです。SFTPクライアントを実行し、公用鍵ベースの接続方法を設定した後、単純にSSHプライベートキーとして ``id_container`` を指定します。それぞれのFTPクライアントは異なる方法を採用する場合があるので、各FTPクライアントのマニュアルを参照してください。"

#: ../../sftp_to_container/sftp_to_container.rst:94
msgid ""
"The SSH/SFTP connection port number is randomly assigned each time when a "
"session is created. If you want to use a specific SSH/SFTP port number, you "
"can input the port number in the \"Preferred SSH Port\" field in the user "
"settings menu. To avoid possible collisions with other services within the "
"compute session, it is recommended to specify a port number between "
"10000-65000. However, if SSH/SFTP connections are made by two or more "
"compute sessions at the same time, the second SSH/SFTP connection cannot use"
" the designated port (since the first SSH/SFTP connection has already taken "
"it), so a random port number will be assigned."
msgstr ""
"SSH/SFTP接続のポート番号は、セッションが作成されるたびにランダムに割り当てられます。特定のSSH/SFTPポート番号を使用したい場合は、ユーザー設定メニューの「Preferred"
" SSH "
"Port」フィールドにポート番号を入力できます。計算セッション内の他のサービスとの衝突を避けるために、10000-65000の間のポート番号を指定することをお勧めします。ただし、2つ以上の計算セッションで同時にSSH/SFTP接続が行われた場合、2番目のSSH/SFTP接続は指定されたポートを使用できません（最初のSSH/SFTP接続がすでに使用しているため）、そのためランダムなポート番号が割り当てられます。"

#: ../../sftp_to_container/sftp_to_container.rst:105
msgid ""
"If you want to use your own SSH keypair instead of ``id_container``, create "
"a user-type folder named ``.ssh``. If you create ``authorized_keys`` file in"
" that folder and append it with the contents of your SSH public key, you can"
" connect by SSH/SFTP through your own SSH private key without having to "
"download the ``id_container`` after creating a compute session."
msgstr ""
"``id_container`` の代わりに独自の SSH キーペアを使用したい場合は、``.ssh`` "
"というユーザータイプのフォルダを作成します。そのフォルダに ``authorized_keys`` ファイルを作成し、SSH "
"公開鍵の内容を追記すると、計算セッションを作成した後に ``id_container`` をダウンロードせずに、独自の SSH 秘密鍵を使って "
"SSH/SFTP で接続できます。"

#: ../../sftp_to_container/sftp_to_container.rst:112
msgid ""
"If you receive the following warning message, try again after changing the "
"permission of the ``id_container`` to 600. (``chmod 600 <id_container "
"path>``)"
msgstr ""
"次の警告メッセージを受け取った場合は、``id_container`` の権限を 600 に変更した後、再試行してください。（``chmod 600 "
"<id_container path>``）"

#: ../../sftp_to_container/sftp_to_container.rst
msgid "Permissions Warning Message"
msgstr "権限警告メッセージ"

#: ../../sftp_to_container/sftp_to_container.rst:120
msgid "For Windows / FileZilla"
msgstr "Windowsの場合 / FileZilla"

#: ../../sftp_to_container/sftp_to_container.rst:122
msgid ""
"Backend.AI Web-UI app supports OpenSSH-based public key connection "
"(RSA2048). To access with a client such as PuTTY on Windows, a private key "
"must be converted into a ``ppk`` file through a program such as PuTTYgen. "
"You can refer to the following link for the conversion method: "
"https://wiki.filezilla-project.org/Howto. For easier explanation, this "
"section will describe how to connect to SFTP through FileZilla client on "
"Windows."
msgstr ""
"Backend.AI Web-"
"UIアプリは、OpenSSHベースの公開鍵接続（RSA2048）をサポートしています。Windows上でPuTTYなどのクライアントを使用してアクセスするには、PuTTYgenなどのプログラムを通じて秘密鍵を ``ppk`` ファイルに変換する必要があります。変換方法については、以下のリンクを参照してください:"
" https://wiki.filezilla-"
"project.org/Howto。より簡単に説明するために、このセクションではWindows上でFileZillaクライアントを使用してSFTPに接続する方法を説明します。"

#: ../../sftp_to_container/sftp_to_container.rst:129
msgid ""
"Refer to the connection method on Linux/Mac, create a compute session, check"
" the connection port and download ``id_container``. ``id_container`` is an "
"OpenSSH-based key, so if you use a client that supports only Windows or ppk "
"type keys, you must convert it. Here, we will convert through the PuTTYgen "
"program installed with PuTTY. After running the PuTTYgen, click on the "
"import key in the Conversions menu. Select the downloaded ``id_container`` "
"file from the file open dialog. Click the Save private key button of "
"PuTTYGen and save the file with the name ``id_container.ppk``."
msgstr ""
"Linux/Macでの接続方法を参照し、計算セッションを作成し、接続ポートを確認して ``id_container`` をダウンロードします。 "
" ``id_container`` はOpenSSHベースのキーであるため、Windowsのみまたはppkタイプのキーをサポートするクライアントを使用する場合は、変換する必要があります。ここでは、PuTTYと一緒にインストールされるPuTTYgenプログラムを介して変換します。"
" "
"PuTTYgenを実行した後、コンバージョンメニューのインポートキーをクリックします。ファイルオープンダイアログからダウンロードした ``id_container`` ファイルを選択します。PuTTYGenの「Save"
" private key」ボタンをクリックし、ファイルを ``id_container.ppk`` という名前で保存します。"

#: ../../sftp_to_container/sftp_to_container.rst:-1
msgid "SSH key conversion with PuttyGen"
msgstr "PuttyGenによるSSHキーの変換"

#: ../../sftp_to_container/sftp_to_container.rst:141
msgid ""
"After launching the FileZilla client, go to the Settings-Connection-SFTP and"
" register the key file ``id_container.ppk`` (``id_container`` for clients "
"supporting OpenSSH)."
msgstr ""
"FileZillaクライアントを起動した後、設定-接続-SFTPに移動し、キー ファイル "
"``id_container.ppk`` （OpenSSHをサポートしているクライアントの場合は ``id_container``）を登録します。"

#: ../../sftp_to_container/sftp_to_container.rst:-1
msgid "Filezilla settings to connect to compute session"
msgstr "コンピュートセッションに接続するためのFilezilla設定"

#: ../../sftp_to_container/sftp_to_container.rst:148
msgid ""
"Open Site Manager, create a new site, and enter the connection information "
"as follows."
msgstr "Site Managerを開き、新しいサイトを作成し、以下の接続情報を入力します。"

#: ../../sftp_to_container/sftp_to_container.rst:-1
msgid "Filezilla site setting"
msgstr "Filezilla サイト設定"

#: ../../sftp_to_container/sftp_to_container.rst:154
msgid ""
"When connecting to a container for the first time, the following "
"confirmation popup may appear. Click the OK button to save the host key."
msgstr ""
"コンテナに初めて接続するとき、次の確認ポップアップが表示されることがあります。ホストキーを保存するには、[OK] ボタンをクリックしてください。"

#: ../../sftp_to_container/sftp_to_container.rst:-1
msgid "Unknown Host Key dialog"
msgstr "不明なホストキー ダイアログ"

#: ../../sftp_to_container/sftp_to_container.rst:162
msgid ""
"After a while, you can see that the connection is established as follows. "
"You can now transfer large files to ``/home/work/`` or other mounted storage"
" folder with this SFTP connection."
msgstr ""
"しばらくすると、次のように接続が確立されていることが確認できます。このSFTP接続を使用して、大きなファイルを ``/home/work/`` または他のマウントされたストレージフォルダーに転送できるようになりました。"

#: ../../sftp_to_container/sftp_to_container.rst:-1
msgid "Filezilla connection established"
msgstr "Filezilla 接続確立"

#: ../../sftp_to_container/sftp_to_container.rst:171
msgid "For Visual Studio Code"
msgstr "Visual Studio Code用"

#: ../../sftp_to_container/sftp_to_container.rst:173
msgid ""
"Backend.AI supports to develop with the local Visual Studio Code through "
"SSH/SFTP connection to a compute session. Once connected, you can interact "
"with files and folders anywhere on the compute session. In this section, we "
"will learn how to do it."
msgstr ""
"Backend.AIは、SSH/SFTP接続を介してコンピュートセッションに接続し、ローカルのVisual Studio "
"Codeで開発することをサポートしています。一度接続されると、コンピュートセッション内のどこにでもあるファイルやフォルダとやり取りできます。このセクションでは、その方法を学びます。"

#: ../../sftp_to_container/sftp_to_container.rst:178
msgid ""
"First, you should install Visual Studio Code and the Remote Development "
"extension pack."
msgstr "まず、Visual Studio Codeとリモート開発拡張パックをインストールする必要があります。"

#: ../../sftp_to_container/sftp_to_container.rst:181
msgid "Link: https://aka.ms/vscode-remote/download/extension"
msgstr "リンク: https://aka.ms/vscode-remote/download/extension"

#: ../../sftp_to_container/sftp_to_container.rst:-1
msgid "Install remote ssh plugin on Visual Studio Code"
msgstr "Visual Studio CodeにリモートSSHプラグインをインストールする"

#: ../../sftp_to_container/sftp_to_container.rst:186
msgid ""
"After installing the extension, you should configure the SSH connection for "
"the compute session. In the VSCode Remote Connection dialog, click the copy "
"icon button to copy the Visual Studio Code remote SSH password. Also, "
"remember the port number."
msgstr ""
"拡張機能をインストールした後、コンピュートセッションのためのSSH接続を設定する必要があります。VSCodeのリモート接続ダイアログで、コピーアイコンボタンをクリックしてVisual"
" Studio CodeのリモートSSHパスワードをコピーします。また、ポート番号も忘れずにメモしておいてください。"

#: ../../sftp_to_container/sftp_to_container.rst:-1
msgid "Download SSH Key"
msgstr "SSHキーをダウンロード"

#: ../../sftp_to_container/sftp_to_container.rst:195
msgid ""
"Then, set the SSH config file. Edit the ``~/.ssh/config`` file (for "
"Linux/Mac) or ``C:\\Users\\[user name]\\.ssh\\config`` (for Windows) and add"
" the following block. For convenience, we set the hostname to ``bai-"
"vscode``. It can be changed to any alias."
msgstr ""
"次に、SSH設定ファイルを設定します。 ``~/.ssh/config`` ファイル（Linux/Macの場合）または ``C:\\Users\\[user"
" name]\\.ssh\\config`` ファイル（Windowsの場合）を編集し、次のブロックを追加します。便宜上、ホスト名を ``bai-"
"vscode`` に設定します。これは任意のエイリアスに変更可能です。"

#: ../../sftp_to_container/sftp_to_container.rst:209
msgid ""
"Now in the Visual Studio Code, select the `Command Palette...` from `View` "
"menu."
msgstr "次にVisual Studio Codeで、`View` メニューから `Command Palette...` を選択します。"

#: ../../sftp_to_container/sftp_to_container.rst:211
msgid "View > comma"
msgstr "表示 > カンマ"

#: ../../sftp_to_container/sftp_to_container.rst:214
msgid ""
"Visual Studio Code can automatically detect the type of host you are "
"connecting to. Let's choose `Remote-SSH: Connect to Host...`."
msgstr ""
"Visual Studio Code は、接続しているホストのタイプを自動的に検出できます。`Remote-SSH: Connect to "
"Host...` を選択しましょう。"

#: ../../sftp_to_container/sftp_to_container.rst:217
msgid "SSH connect"
msgstr "SSH接続"

#: ../../sftp_to_container/sftp_to_container.rst:220
msgid ""
"You will see the list of hosts in ``.ssh/config``. Please select the host to"
" connect, in this case, ``vscode``."
msgstr "``.ssh/config`` にホストのリストが表示されます。接続するホストを選択してください。この場合、「vscode」です。"

#: ../../sftp_to_container/sftp_to_container.rst:223
msgid "Select remote ssh select Host"
msgstr "リモートSSHを選択してホストを選択"

#: ../../sftp_to_container/sftp_to_container.rst:226
msgid ""
"Selecting the host name will lead you to access the remote compute session. "
"After you are connected, you will see an empty window. You can always refer "
"to the Status bar to see which host you are connected to."
msgstr ""
"ホスト名を選択すると、リモートコンピュートセッションにアクセスすることができます。接続後、空のウィンドウが表示されます。接続しているホストを確認するには、常にステータスバーを参照できます。"

#: ../../sftp_to_container/sftp_to_container.rst:230
msgid "Finished remote ssh connection"
msgstr "リモートSSH接続が完了しました"

#: ../../sftp_to_container/sftp_to_container.rst:233
msgid ""
"You can then open any folder or workspace on the remote host by accessing "
"`File > Open...` or `File > Open Workspace...` menu just as you usually "
"would do!"
msgstr ""
"その後、通常通りに `ファイル > 開く...` または `ファイル > ワークスペースを開く...` "
"メニューにアクセスして、リモートホスト上の任意のフォルダまたはワークスペースを開くことができます！"

#: ../../sftp_to_container/sftp_to_container.rst:236
msgid "open remote host file directory"
msgstr "リモートホストのファイルディレクトリを開く"

#: ../../sftp_to_container/sftp_to_container.rst:241
msgid "Establish SSH connection with Backend.AI client package"
msgstr "Backend.AI クライアントパッケージを使用してSSH接続を確立する"

#: ../../sftp_to_container/sftp_to_container.rst:243
msgid ""
"This document describes how to establish an SSH connection to a compute "
"session in environments where a graphical user interface (GUI) cannot be "
"used."
msgstr ""
"このドキュメントでは、グラフィカルユーザーインターフェース (GUI) "
"を使用できない環境で、計算セッションへのSSH接続を確立する方法について説明します。"

#: ../../sftp_to_container/sftp_to_container.rst:246
msgid ""
"Typically, GPU nodes that runs compute sessions (containers) cannot be "
"accessed directly from the outside. Therefore, in order to establish an SSH "
"or sFTP connection to a compute session, a local proxy that creates a tunnel"
" needs to be launched to relay the connection between the user and the "
"session. Using the Backend.AI Client package, this process is relatively "
"simple to configure."
msgstr ""
"通常、計算セッション（コンテナ）を実行するGPUノードは外部から直接アクセスすることはできません。したがって、計算セッションにSSHまたはsFTP接続を確立するためには、ユーザーとセッションの間で接続を中継するトンネルを作成するローカルプロキシを起動する必要があります。Backend.AI"
" Clientパッケージを使用すれば、このプロセスは比較的簡単に設定できます。"

#: ../../sftp_to_container/sftp_to_container.rst:253
msgid "Prepare Backend.AI Client package"
msgstr "Backend.AI クライアントパッケージを準備します"

#: ../../sftp_to_container/sftp_to_container.rst:256
msgid "Prepare with Docker image"
msgstr "Dockerイメージで準備する"

#: ../../sftp_to_container/sftp_to_container.rst:258
msgid ""
"The Backend.AI Client package is available as a Docker image. You can pull "
"the image from the Docker Hub with the following command:"
msgstr ""
"Backend.AI クライアントパッケージは、Docker イメージとして利用できます。次のコマンドで Docker Hub "
"からイメージをプルできます。"

#: ../../sftp_to_container/sftp_to_container.rst:268
msgid ""
"The version of Backend.AI server can be found in \"About Backend.AI\" menu "
"that appears when you click on the person icon on the top right corner of "
"the Web UI."
msgstr ""
"Backend.AIサーバーのバージョンは、Web UIの右上隅にある人のアイコンをクリックすると表示される「About "
"Backend.AI」メニューで確認できます。"

#: ../../sftp_to_container/sftp_to_container.rst:275
msgid "Run the Docker image with the following command:"
msgstr "次のコマンドでDockerイメージを実行します。"

#: ../../sftp_to_container/sftp_to_container.rst:281
msgid ""
"Check if ``backend.ai`` command is available in the container. If it is "
"available, the help message will be displayed."
msgstr "コンテナ内で ``backend.ai`` コマンドが利用可能かどうかを確認します。利用可能な場合、ヘルプメッセージが表示されます。"

#: ../../sftp_to_container/sftp_to_container.rst:289
msgid "Prepare directly from host with a Python virtual environment"
msgstr "ホストから直接Python仮想環境で準備する"

#: ../../sftp_to_container/sftp_to_container.rst:291
msgid ""
"If you cannot or do not want to use Docker, you can install the Backend.AI "
"Client package directly on your host machine. Prerequisites are:"
msgstr ""
"Dockerを使用できない、または使用したくない場合は、ホストマシンにBackend.AIクライアントパッケージを直接インストールできます。必要条件は次のとおりです。"

#: ../../sftp_to_container/sftp_to_container.rst:294
msgid ""
"The required version of Python may vary depending on the Backend.AI Client "
"version. You can check the compability matrix at "
"https://github.com/lablup/backend.ai#python-version-compatibility."
msgstr ""
"必要なPythonのバージョンは、Backend.AI "
"Clientのバージョンによって異なる場合があります。互換性マトリックスは、https://github.com/lablup/backend.ai#python-"
"version-compatibility で確認できます。"

#: ../../sftp_to_container/sftp_to_container.rst:297
msgid "``clang`` compiler might be needed"
msgstr "``clang`` コンパイラが必要になる場合があります"

#: ../../sftp_to_container/sftp_to_container.rst:298
msgid ""
"``zstd`` package might be needed if you are using ``indygreg`` Python "
"binary."
msgstr "``indygreg`` Python バイナリを使用している場合、``zstd`` パッケージが必要になるかもしれません。"

#: ../../sftp_to_container/sftp_to_container.rst:300
msgid ""
"It is recommended to use a Python virtual environment to install the "
"packages. One way is to use the statically-built Python binary from the "
"``indygreg`` repository. Download the binary that matches your local machine"
" architecture from the following page and unzip it."
msgstr ""
"パッケージをインストールするためには、Python仮想環境を使用することをお勧めします。1つの方法としては、``indygreg`` リポジトリーの静的にビルドされたPythonバイナリを使用することです。以下のページから、ローカルマシンのアーキテクチャに合ったバイナリをダウンロードし、解凍します。"

#: ../../sftp_to_container/sftp_to_container.rst:305
msgid "https://github.com/indygreg/python-build-standalone/releases"
msgstr "https://github.com/indygreg/python-build-standalone/releases"

#: ../../sftp_to_container/sftp_to_container.rst:306
msgid ""
"If you are using a popular x86-based Ubuntu environment, you can download "
"and extract it as follows:"
msgstr "人気のあるx86ベースのUbuntu環境を使用している場合は、次のようにダウンロードして抽出できます。"

#: ../../sftp_to_container/sftp_to_container.rst:314
msgid ""
"After unarchiving the binary, ``python`` directory will be created under the"
" current directory. You can check the version of the downloaded Python by "
"running the following command."
msgstr ""
"バイナリを解凍すると、カレントディレクトリの下に ``python`` ディレクトリが作成されます。次のコマンドを実行して、ダウンロードされたPythonのバージョンを確認できます。"

#: ../../sftp_to_container/sftp_to_container.rst:323
msgid ""
"To avoid affecting other Python environments on the system, it is "
"recommended to create a separate Python virtual environment. When you run "
"the following command, a Python virtual environment will be created under "
"the directory ``.venv.``."
msgstr ""
"システム上の他のPython環境に影響を与えないようにするため、別のPython仮想環境を作成することをお勧めします。次のコマンドを実行すると、ディレクトリ ``.venv`` の下にPython仮想環境が作成されます。"

#: ../../sftp_to_container/sftp_to_container.rst:332
msgid ""
"Activate the virtual environment. Since a new virtual environment has been "
"activated, only the ``pip`` and ``setuptools`` packages will be installed "
"when you run the ``pip list`` command."
msgstr ""
"仮想環境をアクティブにします。新しい仮想環境がアクティブになったため、``pip list`` コマンドを実行すると、``pip`` および "
"``setuptools`` パッケージのみがインストールされます。"

#: ../../sftp_to_container/sftp_to_container.rst:345
msgid ""
"Now, install the Backend.AI Client package. Install the client package "
"according to the server version. Here, we assume that the version is 23.09. "
"If an installation-related error occurs with the ``netifaces`` package, you "
"may need to lower the versions of ``pip`` and ``setuptools``. Check if the "
"``backend.ai`` command is available."
msgstr ""
"次に、Backend.AI "
"クライアントパッケージをインストールします。クライアントパッケージはサーバーバージョンに応じてインストールしてください。ここでは、バージョンが23.09であると仮定します。``netifaces``"
" パッケージに関連するインストールエラーが発生した場合、``pip`` と ``setuptools`` "
"のバージョンを下げる必要があるかもしれません。``backend.ai`` コマンドが利用可能かどうか確認してください。"

#: ../../sftp_to_container/sftp_to_container.rst:358
msgid "Setting up server connection for CLI"
msgstr "CLIのためのサーバー接続の設定"

#: ../../sftp_to_container/sftp_to_container.rst:360
msgid ""
"Create a ``.env`` file and add the following content. Use the same address "
"for ``webserver-url`` that you use to connect to the Web UI service from "
"your browser."
msgstr ""
"`.env` ファイルを作成し、次の内容を追加します。ブラウザから Web UI サービスに接続するために使用するのと同じアドレスを "
"`webserver-url` で使用してください。"

#: ../../sftp_to_container/sftp_to_container.rst:369
msgid ""
"Run the following CLI command to connect to the server. Enter the email and "
"password that you use to log in from your browser. If everything goes well, "
"you will see the message ``Login succeeded``."
msgstr ""
"以下のCLIコマンドを実行してサーバーに接続します。ブラウザからログインする際に使用するメールアドレスとパスワードを入力してください。すべてが正常に行われると、``Login"
" succeeded`` というメッセージが表示されます。"

#: ../../sftp_to_container/sftp_to_container.rst:381
msgid "SSH/SCP Connection to Computation Session"
msgstr "SSH/SCP接続による計算セッション"

#: ../../sftp_to_container/sftp_to_container.rst:383
msgid ""
"Create a compute session from the browser by mounting the folder where you "
"want to copy the data. You can create the session using CLI as well, but for"
" convenience, let's assume that you have created it from the browser. "
"Remember the name of the created compute session. Here, we assume it is "
"``ibnFmWim-session``."
msgstr ""
"データをコピーしたいフォルダーをマウントして、ブラウザからコンピュートセッションを作成します。CLIを使ってセッションを作成することもできますが、ここでは便宜上、ブラウザから作成したと仮定します。作成したコンピュートセッションの名前を覚えておいてください。ここでは、``ibnFmWim-"
"session`` と仮定します。"

#: ../../sftp_to_container/sftp_to_container.rst:389
msgid "If you simply want to SSH, execute the following command:"
msgstr "単にSSHを実行したい場合は、次のコマンドを実行します。"

#: ../../sftp_to_container/sftp_to_container.rst:397
msgid ""
"If you want to download the SSH key file and explicitly run the ssh command,"
" you need to first run the following command to launch a local proxy service"
" that relays connection from the local machine to the computation session. "
"You can specify the port (9922) to use on the local machine with the b "
"option."
msgstr ""
"SSHキーファイルをダウンロードしてsshコマンドを明示的に実行したい場合、最初に次のコマンドを実行して、ローカルマシンから計算セッションへの接続を中継するローカルプロキシサービスを起動する必要があります。ローカルマシンで使用するポート(9922)はbオプションで指定できます。"

#: ../../sftp_to_container/sftp_to_container.rst:408
msgid ""
"Open another terminal window on your local machine. Move to the working "
"directory where the ``.env`` file is located, and download the SSH key "
"automatically generated in the compute session."
msgstr ""
"ローカルマシンで別のターミナルウィンドウを開きます。``.env`` ファイルがある作業ディレクトリに移動し、計算セッションで自動生成されたSSHキーをダウンロードします。"

#: ../../sftp_to_container/sftp_to_container.rst:419
msgid ""
"You can use the downloaded key to SSH as follows. Since you launched the "
"local proxy on port 9922, the connection address should be 127.0.0.1 and the"
" port should be 9922. Use the user account ``work`` for the connection."
msgstr ""
"ダウンロードしたキーを使用してSSHするには、以下の通りです。ローカルプロキシをポート9922で起動したので、接続アドレスは127.0.0.1、ポートは9922にする必要があります。接続にはユーザーアカウント ``work`` を使用します。"

#: ../../sftp_to_container/sftp_to_container.rst:434
msgid ""
"Similarly, you can use the ``scp`` command to copy files. In this case, you "
"should copy the files to the mounted folder within the compute session to "
"preserve them even after the session has been terminated."
msgstr ""
"同様に、ファイルをコピーするために ``scp`` "
"コマンドを使用することができます。この場合、コンピュートセッションが終了した後でもファイルを保持するために、ファイルをマウントされたフォルダにコピーする必要があります。"

#: ../../sftp_to_container/sftp_to_container.rst:449
msgid ""
"When all the tasks are completed, press ``Ctrl-C`` on the first terminal to "
"cancel the local proxy service."
msgstr "すべてのタスクが完了したら、最初のターミナルで ``Ctrl-C`` を押してローカルプロキシサービスをキャンセルします。"
